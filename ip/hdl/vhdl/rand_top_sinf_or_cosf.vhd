-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rand_top_sinf_or_cosf is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (31 downto 0);
    do_cos : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of rand_top_sinf_or_cosf is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv8_83 : STD_LOGIC_VECTOR (7 downto 0) := "10000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_true : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_19 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal hls_ref_4oPi_table_100_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal hls_ref_4oPi_table_100_V_ce0 : STD_LOGIC;
    signal hls_ref_4oPi_table_100_V_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal hls_sin_cos_K0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K0_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K0_V_q0 : STD_LOGIC_VECTOR (29 downto 0);
    signal hls_sin_cos_K1_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K1_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K1_V_q0 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_sin_cos_K2_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal hls_sin_cos_K2_V_ce0 : STD_LOGIC;
    signal hls_sin_cos_K2_V_q0 : STD_LOGIC_VECTOR (14 downto 0);
    signal cos_basis_reg_311 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cos_basis_reg_311_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_336 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_9_reg_336_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal do_cos_read_read_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal do_cos_read_reg_1301 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_do_cos_read_reg_1301_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1305 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_p_Result_s_reg_1305_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_492_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_reg_1311 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it7 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it8 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it9 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it10 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it11 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_loc_V_reg_1311_pp0_it12 : STD_LOGIC_VECTOR (7 downto 0);
    signal loc_V_1_fu_502_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal loc_V_1_reg_1319 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it1 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it2 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it3 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it4 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it5 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it6 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it7 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it8 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it9 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it10 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it11 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_reg_ppstg_loc_V_1_reg_1319_pp0_it12 : STD_LOGIC_VECTOR (22 downto 0);
    signal closepath_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_1325 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_closepath_reg_1325_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_512_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_16_reg_1332 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_1332_pp0_it1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_1332_pp0_it2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_16_reg_1332_pp0_it3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_543_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_reg_1342 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_ppstg_tmp_17_reg_1342_pp0_it2 : STD_LOGIC_VECTOR (3 downto 0);
    signal table_100_V_reg_1347 : STD_LOGIC_VECTOR (99 downto 0);
    signal p_Result_78_i_i_i_reg_1352 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_78_1_i_i_i_reg_1357 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_1_i_i_i_reg_1357_pp0_it4 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_78_2_i_i_i_reg_1362 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it5 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_78_3_i_i_i_reg_1367 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it5 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it6 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_78_4_i_i_i_reg_1372 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_i_i_i_fu_612_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_i_i_i_reg_1377 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_126_4_i_i_i_fu_625_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_126_4_i_i_i_reg_1390 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it5 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it6 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it7 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it8 : STD_LOGIC_VECTOR (2 downto 0);
    signal r_V_i_i_i_reg_1405 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_1_i_i_i_reg_1415 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_23_reg_1420 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_ppstg_tmp_23_reg_1420_pp0_it8 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_reg_ppstg_tmp_23_reg_1420_pp0_it9 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_i_i_i_reg_1425 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_21_fu_711_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_reg_1430 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_tmp_21_reg_1430_pp0_it9 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_123_3_i_i_i_fu_734_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_123_3_i_i_i_reg_1435 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_22_fu_739_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_reg_1440 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_37_fu_750_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_37_reg_1445 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_ppstg_p_Val2_37_reg_1445_pp0_it11 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_8_fu_766_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_8_reg_1450 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_reg_ppstg_p_Val2_8_reg_1450_pp0_it11 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_i3_i_reg_1455 : STD_LOGIC_VECTOR (17 downto 0);
    signal Mx_zeros_V_fu_817_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal Mx_zeros_V_reg_1460 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_8_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_19_reg_1471 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_26_reg_1476 : STD_LOGIC_VECTOR (0 downto 0);
    signal Ex_V_fu_868_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_reg_1481 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it13 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it14 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it15 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it16 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it17 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it18 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it19 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it20 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it21 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it22 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it23 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it24 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it25 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it26 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it27 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_Ex_V_reg_1481_pp0_it28 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_isNeg_reg_1487_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_38_fu_891_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_38_reg_1496 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it14 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it15 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it16 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it17 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it18 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it19 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it20 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it21 : STD_LOGIC_VECTOR (30 downto 0);
    signal sh_assign_fu_905_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_reg_1503 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1509 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1509_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_reg_1513 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_i1_reg_1513_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_30_reg_1517 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_reg_ppstg_p_Result_s_30_reg_1517_pp0_it15 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_s_reg_1522 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it15 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it16 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it17 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_reg_1527 : STD_LOGIC_VECTOR (8 downto 0);
    signal OP1_V_3_fu_994_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_1558 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_22_reg_1563 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it18 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it19 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it20 : STD_LOGIC_VECTOR (29 downto 0);
    signal hls_sin_cos_K1_V_load_reg_1568 : STD_LOGIC_VECTOR (22 downto 0);
    signal hls_sin_cos_K2_V_load_reg_1573 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_4_reg_1598 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_reg_1603 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_1100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_reg_1608 : STD_LOGIC_VECTOR (31 downto 0);
    signal ain_V_reg_1623 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Result_i_reg_1629 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_97_i_fu_1176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_i_reg_1634 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_97_i_reg_1634_pp0_it29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1184_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_28_reg_1640 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_97_1_i_fu_1207_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_97_1_i_reg_1645 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1215_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_29_reg_1650 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_104_i_fu_1219_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_104_i_reg_1655 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_21_i_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_reg_1661 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_21_i_reg_1661_pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_fu_1233_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_i_reg_1665 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_22_i_reg_1665_pp0_it30 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_2_1_i_fu_1246_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_i_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_104_1_i_fu_1251_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ret_i_i_i_fu_1262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cos_basis_reg_311pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cos_basis_reg_311pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal cos_basis_phi_fu_316_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_9_reg_336pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_9_reg_336pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_9_reg_336pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_sin_basis_reg_362pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_sin_basis_reg_362pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_sin_basis_reg_362pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_sin_basis_reg_362pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it30 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_reg_phiprechg_shift_1_i_reg_381pp0_it30 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_shift_1_i_reg_381pp0_it31 : STD_LOGIC_VECTOR (31 downto 0);
    signal phitmp_i_fu_1280_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_out_exp_V_reg_390pp0_it31 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_exp_V_phi_fu_394_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_out_exp_V_reg_390pp0_it29 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_out_exp_V_reg_390pp0_it30 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it23 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it24 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it25 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it26 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it27 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it28 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it29 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it30 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Result_16_reg_401pp0_it31 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_24_fu_882_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ret_i_i_fu_1296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it31 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_phi_fu_467_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it30 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it13 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it14 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it15 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it16 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it17 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it18 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it19 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it20 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it21 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it22 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it23 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it24 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it25 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it26 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it27 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it28 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_p_s_reg_462pp0_it29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_i_i_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_32_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_i_fu_516_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_V_fu_521_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_528_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_25_i_i_fu_547_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_2_fu_550_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal p_Result_19_fu_605_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_619_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_619_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_632_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_632_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_640_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_640_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_619_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_658_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_658_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_632_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_18_fu_663_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_123_i_i_i_fu_666_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_640_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_19_fu_692_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_123_1_i_i_i_fu_695_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_658_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_20_fu_715_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_123_2_i_i_i_fu_718_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_3_i_i_i_cast_fu_724_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_7_fu_743_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal tmp_24_fu_756_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_fu_760_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Result_20_fu_784_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_21_fu_791_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_22_fu_801_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_809_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_i_fu_827_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_i_fu_839_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal p_Val2_18_fu_842_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal storemerge_i_fu_832_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_i_fu_865_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_888_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sh_i_cast_fu_896_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_7_i_fu_899_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_fu_912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sh_assign_1_i_cast_fu_936_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_i_fu_942_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_8_i_fu_939_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_cast8_fu_933_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_i_cast_fu_947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_i_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_0_i234_in_i_fu_957_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_997_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_997_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_23_fu_1009_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_997_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1039_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1039_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1051_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1051_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_1039_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1051_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_23_fu_1077_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_3_fu_1084_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_24_fu_1091_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_cast_fu_1097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Mx_V_ret_fu_1106_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1120_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1120_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1120_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_64_i_fu_1136_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_1146_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_61_i_fu_1154_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_i_fu_1188_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_4_fu_1195_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_op_fu_1228_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_25_fu_1255_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1276_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_39_fu_1266_p4 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_26_fu_1286_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_619_ce : STD_LOGIC;
    signal grp_fu_632_ce : STD_LOGIC;
    signal grp_fu_640_ce : STD_LOGIC;
    signal grp_fu_658_ce : STD_LOGIC;
    signal grp_fu_997_ce : STD_LOGIC;
    signal grp_fu_1039_ce : STD_LOGIC;
    signal grp_fu_1051_ce : STD_LOGIC;
    signal grp_fu_1120_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal grp_fu_1039_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1051_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1120_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_619_p00 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_619_p10 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_632_p10 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_640_p10 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_658_p10 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_sig_bdd_754 : BOOLEAN;
    signal ap_sig_bdd_735 : BOOLEAN;
    signal ap_sig_bdd_936 : BOOLEAN;
    signal ap_sig_bdd_941 : BOOLEAN;
    signal ap_sig_bdd_715 : BOOLEAN;
    signal ap_sig_bdd_639 : BOOLEAN;
    signal ap_sig_bdd_720 : BOOLEAN;

    component rand_top_mul_24ns_17ns_41_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component rand_top_mul_9ns_9ns_18_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component rand_top_mul_23s_17ns_40_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (22 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component rand_top_mul_17ns_15s_32_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (14 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_mul_32s_31ns_63_7 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component rand_top_sinf_or_cosf_hls_ref_4oPi_table_100_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component rand_top_sinf_or_cosf_hls_sin_cos_K0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component rand_top_sinf_or_cosf_hls_sin_cos_K1_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component rand_top_sinf_or_cosf_hls_sin_cos_K2_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;



begin
    hls_ref_4oPi_table_100_V_U : component rand_top_sinf_or_cosf_hls_ref_4oPi_table_100_V
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_ref_4oPi_table_100_V_address0,
        ce0 => hls_ref_4oPi_table_100_V_ce0,
        q0 => hls_ref_4oPi_table_100_V_q0);

    hls_sin_cos_K0_V_U : component rand_top_sinf_or_cosf_hls_sin_cos_K0_V
    generic map (
        DataWidth => 30,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K0_V_address0,
        ce0 => hls_sin_cos_K0_V_ce0,
        q0 => hls_sin_cos_K0_V_q0);

    hls_sin_cos_K1_V_U : component rand_top_sinf_or_cosf_hls_sin_cos_K1_V
    generic map (
        DataWidth => 23,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K1_V_address0,
        ce0 => hls_sin_cos_K1_V_ce0,
        q0 => hls_sin_cos_K1_V_q0);

    hls_sin_cos_K2_V_U : component rand_top_sinf_or_cosf_hls_sin_cos_K2_V
    generic map (
        DataWidth => 15,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => hls_sin_cos_K2_V_address0,
        ce0 => hls_sin_cos_K2_V_ce0,
        q0 => hls_sin_cos_K2_V_q0);

    rand_top_mul_24ns_17ns_41_3_U9 : component rand_top_mul_24ns_17ns_41_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 24,
        din1_WIDTH => 17,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_619_p0,
        din1 => grp_fu_619_p1,
        ce => grp_fu_619_ce,
        dout => grp_fu_619_p2);

    rand_top_mul_24ns_17ns_41_3_U10 : component rand_top_mul_24ns_17ns_41_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 24,
        din1_WIDTH => 17,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_632_p0,
        din1 => grp_fu_632_p1,
        ce => grp_fu_632_ce,
        dout => grp_fu_632_p2);

    rand_top_mul_24ns_17ns_41_3_U11 : component rand_top_mul_24ns_17ns_41_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 24,
        din1_WIDTH => 17,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_640_p0,
        din1 => grp_fu_640_p1,
        ce => grp_fu_640_ce,
        dout => grp_fu_640_p2);

    rand_top_mul_24ns_17ns_41_3_U12 : component rand_top_mul_24ns_17ns_41_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 24,
        din1_WIDTH => 17,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_658_p0,
        din1 => grp_fu_658_p1,
        ce => grp_fu_658_ce,
        dout => grp_fu_658_p2);

    rand_top_mul_9ns_9ns_18_3_U13 : component rand_top_mul_9ns_9ns_18_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 9,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_997_p0,
        din1 => grp_fu_997_p1,
        ce => grp_fu_997_ce,
        dout => grp_fu_997_p2);

    rand_top_mul_23s_17ns_40_3_U14 : component rand_top_mul_23s_17ns_40_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 23,
        din1_WIDTH => 17,
        dout_WIDTH => 40)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1039_p0,
        din1 => grp_fu_1039_p1,
        ce => grp_fu_1039_ce,
        dout => grp_fu_1039_p2);

    rand_top_mul_17ns_15s_32_3_U15 : component rand_top_mul_17ns_15s_32_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 17,
        din1_WIDTH => 15,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1051_p0,
        din1 => grp_fu_1051_p1,
        ce => grp_fu_1051_ce,
        dout => grp_fu_1051_p2);

    rand_top_mul_32s_31ns_63_7_U16 : component rand_top_mul_32s_31ns_63_7
    generic map (
        ID => 1,
        NUM_STAGE => 7,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1120_p0,
        din1 => grp_fu_1120_p1,
        ce => grp_fu_1120_ce,
        dout => grp_fu_1120_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0)) or not((ap_const_logic_1 = ap_ce))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_cos_basis_reg_311pp0_it12 assign process. --
    ap_reg_phiprechg_cos_basis_reg_311pp0_it12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0)))) then 
                ap_reg_phiprechg_cos_basis_reg_311pp0_it12 <= tmp_8_fu_821_p2;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and not((p_Val2_37_reg_1445 = ap_const_lv3_5)) and not((p_Val2_37_reg_1445 = ap_const_lv3_2)) and not((p_Val2_37_reg_1445 = ap_const_lv3_1)) and not((p_Val2_37_reg_1445 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_cos_basis_reg_311pp0_it12 <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_cos_basis_reg_311pp0_it12 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
                ap_reg_phiprechg_cos_basis_reg_311pp0_it12 <= ap_reg_phiprechg_cos_basis_reg_311pp0_it11;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_out_exp_V_reg_390pp0_it30 assign process. --
    ap_reg_phiprechg_out_exp_V_reg_390pp0_it30_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_754) then
                if (not((ap_const_lv1_0 = tmp_21_i_fu_1223_p2))) then 
                    ap_reg_phiprechg_out_exp_V_reg_390pp0_it30 <= ap_const_lv8_0;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_out_exp_V_reg_390pp0_it30 <= ap_reg_phiprechg_out_exp_V_reg_390pp0_it29;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_p_Result_16_reg_401pp0_it13 assign process. --
    ap_reg_phiprechg_p_Result_16_reg_401pp0_it13_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and not((p_Result_24_fu_882_p3 = ap_const_lv4_7)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_8)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_5)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_4)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_A)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_2)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_B)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_D))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_5)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_4)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_A)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_B)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_9)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_6)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_3)) and not((p_Result_24_fu_882_p3 = ap_const_lv4_C))))) then 
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it13 <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_6)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_9)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_const_lv1_0 = cos_basis_phi_fu_316_p12)) and (p_Result_24_fu_882_p3 = ap_const_lv4_C)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_7)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_8)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_A)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_B)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = cos_basis_phi_fu_316_p12) and (p_Result_24_fu_882_p3 = ap_const_lv4_D)))) then 
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it13 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it13 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it12;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31 assign process. --
    ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_735) then
                if (not((ap_const_lv1_0 = tmp_105_i_fu_1241_p2))) then 
                    ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31 <= tmp_104_1_i_fu_1251_p2;
                elsif ((ap_const_lv1_0 = tmp_105_i_fu_1241_p2)) then 
                    ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31 <= tmp_104_i_reg_1655;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31 <= ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it30;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_p_s_reg_462pp0_it14 assign process. --
    ap_reg_phiprechg_p_s_reg_462pp0_it14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_715) then
                if (ap_sig_bdd_941) then 
                    ap_reg_phiprechg_p_s_reg_462pp0_it14 <= ap_const_lv32_7FFFFFFF;
                elsif (ap_sig_bdd_936) then 
                    ap_reg_phiprechg_p_s_reg_462pp0_it14 <= ap_const_lv32_3F800000;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_p_s_reg_462pp0_it14 <= ap_reg_phiprechg_p_s_reg_462pp0_it13;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_p_s_reg_462pp0_it31 assign process. --
    ap_reg_phiprechg_p_s_reg_462pp0_it31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_735) then
                if (ap_sig_bdd_639) then 
                    ap_reg_phiprechg_p_s_reg_462pp0_it31 <= ret_i_i_i_fu_1262_p1;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_p_s_reg_462pp0_it31 <= ap_reg_phiprechg_p_s_reg_462pp0_it30;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_shift_1_i_reg_381pp0_it31 assign process. --
    ap_reg_phiprechg_shift_1_i_reg_381pp0_it31_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_735) then
                if (not((ap_const_lv1_0 = tmp_105_i_fu_1241_p2))) then 
                    ap_reg_phiprechg_shift_1_i_reg_381pp0_it31 <= shift_2_1_i_fu_1246_p2;
                elsif ((ap_const_lv1_0 = tmp_105_i_fu_1241_p2)) then 
                    ap_reg_phiprechg_shift_1_i_reg_381pp0_it31 <= ap_reg_ppstg_tmp_97_i_reg_1634_pp0_it29;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_shift_1_i_reg_381pp0_it31 <= ap_reg_phiprechg_shift_1_i_reg_381pp0_it30;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_sin_basis_reg_362pp0_it14 assign process. --
    ap_reg_phiprechg_sin_basis_reg_362pp0_it14_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_715) then
                if (not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12 = ap_const_lv1_0))) then 
                    ap_reg_phiprechg_sin_basis_reg_362pp0_it14 <= ap_reg_phiprechg_tmp_9_reg_336pp0_it13;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_sin_basis_reg_362pp0_it14 <= ap_reg_phiprechg_sin_basis_reg_362pp0_it13;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_sin_basis_reg_362pp0_it16 assign process. --
    ap_reg_phiprechg_sin_basis_reg_362pp0_it16_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_720) then
                if ((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it14 = ap_const_lv1_0)) then 
                    ap_reg_phiprechg_sin_basis_reg_362pp0_it16 <= tmp_s_fu_1003_p2;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_sin_basis_reg_362pp0_it16 <= ap_reg_phiprechg_sin_basis_reg_362pp0_it15;
                end if;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 assign process. --
    ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 = ap_const_lv1_0)) and not((p_Val2_37_fu_750_p3 = ap_const_lv3_5)) and not((p_Val2_37_fu_750_p3 = ap_const_lv3_2)) and not((p_Val2_37_fu_750_p3 = ap_const_lv3_1)) and not((p_Val2_37_fu_750_p3 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 = ap_const_lv1_0)) and (p_Val2_37_fu_750_p3 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 = ap_const_lv1_0)) and (p_Val2_37_fu_750_p3 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 = ap_const_lv1_0)) and (p_Val2_37_fu_750_p3 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 = ap_const_lv1_0)) and (p_Val2_37_fu_750_p3 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it10) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
                ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 <= ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it10;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_tmp_9_reg_336pp0_it12 assign process. --
    ap_reg_phiprechg_tmp_9_reg_336pp0_it12_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0)))) then 
                ap_reg_phiprechg_tmp_9_reg_336pp0_it12 <= ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and not((p_Val2_37_reg_1445 = ap_const_lv3_5)) and not((p_Val2_37_reg_1445 = ap_const_lv3_2)) and not((p_Val2_37_reg_1445 = ap_const_lv3_1)) and not((p_Val2_37_reg_1445 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_tmp_9_reg_336pp0_it12 <= ap_const_lv1_0;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_2)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_5)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 = ap_const_lv1_0) and (p_Val2_37_reg_1445 = ap_const_lv3_6)))) then 
                ap_reg_phiprechg_tmp_9_reg_336pp0_it12 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it11) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
                ap_reg_phiprechg_tmp_9_reg_336pp0_it12 <= ap_reg_phiprechg_tmp_9_reg_336pp0_it11;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                Ex_V_reg_1481 <= Ex_V_fu_868_p2;
                Mx_zeros_V_reg_1460 <= Mx_zeros_V_fu_817_p1;
                ain_V_reg_1623 <= grp_fu_1120_p2(61 downto 31);
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it13 <= Ex_V_reg_1481;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it14 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it13;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it15 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it14;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it16 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it15;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it17 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it16;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it18 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it17;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it19 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it18;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it20 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it19;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it21 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it20;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it22 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it21;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it23 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it22;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it24 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it23;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it25 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it24;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it26 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it25;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it27 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it26;
                ap_reg_ppstg_Ex_V_reg_1481_pp0_it28 <= ap_reg_ppstg_Ex_V_reg_1481_pp0_it27;
                ap_reg_ppstg_closepath_reg_1325_pp0_it10 <= ap_reg_ppstg_closepath_reg_1325_pp0_it9;
                ap_reg_ppstg_closepath_reg_1325_pp0_it11 <= ap_reg_ppstg_closepath_reg_1325_pp0_it10;
                ap_reg_ppstg_closepath_reg_1325_pp0_it2 <= ap_reg_ppstg_closepath_reg_1325_pp0_it1;
                ap_reg_ppstg_closepath_reg_1325_pp0_it3 <= ap_reg_ppstg_closepath_reg_1325_pp0_it2;
                ap_reg_ppstg_closepath_reg_1325_pp0_it4 <= ap_reg_ppstg_closepath_reg_1325_pp0_it3;
                ap_reg_ppstg_closepath_reg_1325_pp0_it5 <= ap_reg_ppstg_closepath_reg_1325_pp0_it4;
                ap_reg_ppstg_closepath_reg_1325_pp0_it6 <= ap_reg_ppstg_closepath_reg_1325_pp0_it5;
                ap_reg_ppstg_closepath_reg_1325_pp0_it7 <= ap_reg_ppstg_closepath_reg_1325_pp0_it6;
                ap_reg_ppstg_closepath_reg_1325_pp0_it8 <= ap_reg_ppstg_closepath_reg_1325_pp0_it7;
                ap_reg_ppstg_closepath_reg_1325_pp0_it9 <= ap_reg_ppstg_closepath_reg_1325_pp0_it8;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it13 <= cos_basis_reg_311;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it14 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it13;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it15 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it14;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it16 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it15;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it17 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it16;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it18 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it17;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it19 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it18;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it20 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it19;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it21 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it20;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it22 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it21;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it23 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it22;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it24 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it23;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it25 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it24;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it26 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it25;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it27 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it26;
                ap_reg_ppstg_cos_basis_reg_311_pp0_it28 <= ap_reg_ppstg_cos_basis_reg_311_pp0_it27;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it11 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it10;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it11;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it13 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it14 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it13;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it15 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it14;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it16 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it15;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it17 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it16;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it18 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it17;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it19 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it18;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it2 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it1;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it20 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it19;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it21 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it20;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it22 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it21;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it23 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it22;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it24 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it23;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it25 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it24;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it26 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it25;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it27 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it26;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it28 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it27;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it29 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it28;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it3 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it2;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it4 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it3;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it5 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it4;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it6 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it5;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it7 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it6;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it8 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it7;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it9 <= ap_reg_ppstg_do_cos_read_reg_1301_pp0_it8;
                ap_reg_ppstg_isNeg_reg_1487_pp0_it13 <= isNeg_reg_1487;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it10 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it9;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it11 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it10;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it12 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it11;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it2 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it1;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it3 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it2;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it4 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it3;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it5 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it4;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it6 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it5;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it7 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it6;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it8 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it7;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it9 <= ap_reg_ppstg_loc_V_1_reg_1319_pp0_it8;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it10 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it9;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it11 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it10;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it12 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it11;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it2 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it1;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it3 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it2;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it4 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it3;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it5 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it4;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it6 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it5;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it7 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it6;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it8 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it7;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it9 <= ap_reg_ppstg_loc_V_reg_1311_pp0_it8;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it14 <= or_cond_reg_1509;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it15 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it14;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it16 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it15;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it17 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it16;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it18 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it17;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it19 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it18;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it20 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it19;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it21 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it20;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it22 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it21;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it23 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it22;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it24 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it23;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it25 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it24;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it26 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it25;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it27 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it26;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it28 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it27;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it29 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it28;
                ap_reg_ppstg_or_cond_reg_1509_pp0_it30 <= ap_reg_ppstg_or_cond_reg_1509_pp0_it29;
                ap_reg_ppstg_p_Result_78_1_i_i_i_reg_1357_pp0_it4 <= p_Result_78_1_i_i_i_reg_1357;
                ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it4 <= p_Result_78_2_i_i_i_reg_1362;
                ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it5 <= ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it4;
                ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it4 <= p_Result_78_3_i_i_i_reg_1367;
                ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it5 <= ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it4;
                ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it6 <= ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it5;
                ap_reg_ppstg_p_Result_s_30_reg_1517_pp0_it15 <= p_Result_s_30_reg_1517;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it10 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it9;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it11 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it10;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it12 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it11;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it13 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it12;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it14 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it13;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it15 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it14;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it16 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it15;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it17 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it16;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it18 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it17;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it19 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it18;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it2 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it1;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it20 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it19;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it21 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it20;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it22 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it21;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it23 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it22;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it24 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it23;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it25 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it24;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it26 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it25;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it27 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it26;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it28 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it27;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it29 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it28;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it3 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it2;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it4 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it3;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it5 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it4;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it6 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it5;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it7 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it6;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it8 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it7;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it9 <= ap_reg_ppstg_p_Result_s_reg_1305_pp0_it8;
                ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it18 <= p_Val2_22_reg_1563;
                ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it19 <= ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it18;
                ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it20 <= ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it19;
                ap_reg_ppstg_p_Val2_37_reg_1445_pp0_it11 <= p_Val2_37_reg_1445;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it14 <= p_Val2_38_reg_1496;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it15 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it14;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it16 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it15;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it17 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it16;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it18 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it17;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it19 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it18;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it20 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it19;
                ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it21 <= ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it20;
                ap_reg_ppstg_p_Val2_8_reg_1450_pp0_it11 <= p_Val2_8_reg_1450;
                ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it15 <= p_Val2_s_reg_1522;
                ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it16 <= ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it15;
                ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it17 <= ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it16;
                ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it5 <= tmp_126_4_i_i_i_reg_1390;
                ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it6 <= ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it5;
                ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it7 <= ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it6;
                ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it8 <= ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it7;
                ap_reg_ppstg_tmp_16_reg_1332_pp0_it2 <= ap_reg_ppstg_tmp_16_reg_1332_pp0_it1;
                ap_reg_ppstg_tmp_16_reg_1332_pp0_it3 <= ap_reg_ppstg_tmp_16_reg_1332_pp0_it2;
                ap_reg_ppstg_tmp_17_reg_1342_pp0_it2 <= tmp_17_reg_1342;
                ap_reg_ppstg_tmp_21_i_reg_1661_pp0_it30 <= tmp_21_i_reg_1661;
                ap_reg_ppstg_tmp_21_reg_1430_pp0_it9 <= tmp_21_reg_1430;
                ap_reg_ppstg_tmp_22_i_reg_1665_pp0_it30 <= tmp_22_i_reg_1665;
                ap_reg_ppstg_tmp_23_reg_1420_pp0_it8 <= tmp_23_reg_1420;
                ap_reg_ppstg_tmp_23_reg_1420_pp0_it9 <= ap_reg_ppstg_tmp_23_reg_1420_pp0_it8;
                ap_reg_ppstg_tmp_97_i_reg_1634_pp0_it29 <= tmp_97_i_reg_1634;
                ap_reg_ppstg_tmp_9_reg_336_pp0_it14 <= tmp_9_reg_336;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it14 <= tmp_i1_reg_1513;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it15 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it14;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it16 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it15;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it17 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it16;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it18 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it17;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it19 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it18;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it20 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it19;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it21 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it20;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it22 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it21;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it23 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it22;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it24 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it23;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it25 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it24;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it26 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it25;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it27 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it26;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it28 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it27;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it29 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it28;
                ap_reg_ppstg_tmp_i1_reg_1513_pp0_it30 <= ap_reg_ppstg_tmp_i1_reg_1513_pp0_it29;
                ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(0) <= tmp_i_i_i_reg_1377(0);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(1) <= tmp_i_i_i_reg_1377(1);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(2) <= tmp_i_i_i_reg_1377(2);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(3) <= tmp_i_i_i_reg_1377(3);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(4) <= tmp_i_i_i_reg_1377(4);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(5) <= tmp_i_i_i_reg_1377(5);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(6) <= tmp_i_i_i_reg_1377(6);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(7) <= tmp_i_i_i_reg_1377(7);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(8) <= tmp_i_i_i_reg_1377(8);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(9) <= tmp_i_i_i_reg_1377(9);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(10) <= tmp_i_i_i_reg_1377(10);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(11) <= tmp_i_i_i_reg_1377(11);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(12) <= tmp_i_i_i_reg_1377(12);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(13) <= tmp_i_i_i_reg_1377(13);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(14) <= tmp_i_i_i_reg_1377(14);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(15) <= tmp_i_i_i_reg_1377(15);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(16) <= tmp_i_i_i_reg_1377(16);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(17) <= tmp_i_i_i_reg_1377(17);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(18) <= tmp_i_i_i_reg_1377(18);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(19) <= tmp_i_i_i_reg_1377(19);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(20) <= tmp_i_i_i_reg_1377(20);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(21) <= tmp_i_i_i_reg_1377(21);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(22) <= tmp_i_i_i_reg_1377(22);
                ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(0) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(0);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(1) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(1);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(2) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(2);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(3) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(3);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(4) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(4);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(5) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(5);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(6) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(6);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(7) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(7);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(8) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(8);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(9) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(9);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(10) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(10);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(11) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(11);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(12) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(12);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(13) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(13);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(14) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(14);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(15) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(15);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(16) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(16);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(17) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(17);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(18) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(18);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(19) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(19);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(20) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(20);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(21) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(21);
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(22) <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(22);
                hls_sin_cos_K1_V_load_reg_1568 <= hls_sin_cos_K1_V_q0;
                hls_sin_cos_K2_V_load_reg_1573 <= hls_sin_cos_K2_V_q0;
                isNeg_reg_1487 <= Ex_V_fu_868_p2(7 downto 7);
                or_cond_reg_1509 <= or_cond_fu_922_p2;
                p_Result_78_1_i_i_i_reg_1357 <= r_V_2_fu_550_p2(62 downto 46);
                p_Result_78_2_i_i_i_reg_1362 <= r_V_2_fu_550_p2(79 downto 63);
                p_Result_78_3_i_i_i_reg_1367 <= r_V_2_fu_550_p2(96 downto 80);
                p_Result_78_i_i_i_reg_1352 <= r_V_2_fu_550_p2(45 downto 29);
                p_Result_i3_i_reg_1455 <= p_Val2_8_fu_766_p3(48 downto 31);
                p_Result_i_reg_1629 <= grp_fu_1120_p2(45 downto 31);
                p_Result_s_30_reg_1517 <= p_Val2_0_i234_in_i_fu_957_p3(30 downto 24);
                p_Val2_19_reg_1471 <= p_Val2_18_fu_842_p2(48 downto 18);
                p_Val2_22_reg_1563 <= hls_sin_cos_K0_V_q0;
                p_Val2_37_reg_1445 <= p_Val2_37_fu_750_p3;
                p_Val2_38_reg_1496 <= p_Val2_38_fu_891_p2;
                p_Val2_8_reg_1450 <= p_Val2_8_fu_766_p3;
                p_Val2_s_reg_1522 <= p_Val2_0_i234_in_i_fu_957_p3(23 downto 7);
                r_V_1_i_i_i_reg_1415 <= tmp_123_i_i_i_fu_666_p2(40 downto 17);
                r_V_2_i_i_i_reg_1425 <= tmp_123_1_i_i_i_fu_695_p2(40 downto 17);
                r_V_i_i_i_reg_1405 <= grp_fu_619_p2(40 downto 17);
                r_V_reg_1608 <= r_V_fu_1100_p2;
                sh_assign_reg_1503 <= sh_assign_fu_905_p3;
                table_100_V_reg_1347 <= hls_ref_4oPi_table_100_V_q0;
                tmp_104_i_reg_1655 <= tmp_104_i_fu_1219_p2;
                tmp_21_i_reg_1661 <= tmp_21_i_fu_1223_p2;
                tmp_21_reg_1430 <= tmp_21_fu_711_p1;
                tmp_22_reg_1440 <= tmp_22_fu_739_p1;
                tmp_23_reg_1420 <= tmp_123_i_i_i_fu_666_p2(16 downto 2);
                tmp_26_reg_1476 <= p_Val2_18_fu_842_p2(17 downto 17);
                tmp_28_reg_1640 <= tmp_28_fu_1184_p1;
                tmp_29_reg_1650 <= tmp_29_fu_1215_p1;
                tmp_2_reg_1527 <= p_Val2_0_i234_in_i_fu_957_p3(23 downto 15);
                tmp_4_reg_1598 <= grp_fu_1039_p2(39 downto 16);
                tmp_6_reg_1603 <= grp_fu_1051_p2(31 downto 16);
                tmp_7_reg_1558 <= grp_fu_997_p2(17 downto 1);
                tmp_97_1_i_reg_1645 <= tmp_97_1_i_fu_1207_p3;
                tmp_97_i_reg_1634 <= tmp_97_i_fu_1176_p3;
                tmp_i_i_i_reg_1377(0) <= tmp_i_i_i_fu_612_p1(0);
    tmp_i_i_i_reg_1377(1) <= tmp_i_i_i_fu_612_p1(1);
    tmp_i_i_i_reg_1377(2) <= tmp_i_i_i_fu_612_p1(2);
    tmp_i_i_i_reg_1377(3) <= tmp_i_i_i_fu_612_p1(3);
    tmp_i_i_i_reg_1377(4) <= tmp_i_i_i_fu_612_p1(4);
    tmp_i_i_i_reg_1377(5) <= tmp_i_i_i_fu_612_p1(5);
    tmp_i_i_i_reg_1377(6) <= tmp_i_i_i_fu_612_p1(6);
    tmp_i_i_i_reg_1377(7) <= tmp_i_i_i_fu_612_p1(7);
    tmp_i_i_i_reg_1377(8) <= tmp_i_i_i_fu_612_p1(8);
    tmp_i_i_i_reg_1377(9) <= tmp_i_i_i_fu_612_p1(9);
    tmp_i_i_i_reg_1377(10) <= tmp_i_i_i_fu_612_p1(10);
    tmp_i_i_i_reg_1377(11) <= tmp_i_i_i_fu_612_p1(11);
    tmp_i_i_i_reg_1377(12) <= tmp_i_i_i_fu_612_p1(12);
    tmp_i_i_i_reg_1377(13) <= tmp_i_i_i_fu_612_p1(13);
    tmp_i_i_i_reg_1377(14) <= tmp_i_i_i_fu_612_p1(14);
    tmp_i_i_i_reg_1377(15) <= tmp_i_i_i_fu_612_p1(15);
    tmp_i_i_i_reg_1377(16) <= tmp_i_i_i_fu_612_p1(16);
    tmp_i_i_i_reg_1377(17) <= tmp_i_i_i_fu_612_p1(17);
    tmp_i_i_i_reg_1377(18) <= tmp_i_i_i_fu_612_p1(18);
    tmp_i_i_i_reg_1377(19) <= tmp_i_i_i_fu_612_p1(19);
    tmp_i_i_i_reg_1377(20) <= tmp_i_i_i_fu_612_p1(20);
    tmp_i_i_i_reg_1377(21) <= tmp_i_i_i_fu_612_p1(21);
    tmp_i_i_i_reg_1377(22) <= tmp_i_i_i_fu_612_p1(22);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_out_exp_V_reg_390pp0_it31 <= ap_reg_phiprechg_out_exp_V_reg_390pp0_it30;
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it31 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it30;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it14 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it13;
                tmp_9_reg_336 <= ap_reg_phiprechg_tmp_9_reg_336pp0_it13;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it14) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it15 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it14;
                ap_reg_phiprechg_p_s_reg_462pp0_it15 <= ap_reg_phiprechg_p_s_reg_462pp0_it14;
                ap_reg_phiprechg_sin_basis_reg_362pp0_it15 <= ap_reg_phiprechg_sin_basis_reg_362pp0_it14;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it15) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it16 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it15;
                ap_reg_phiprechg_p_s_reg_462pp0_it16 <= ap_reg_phiprechg_p_s_reg_462pp0_it15;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it17 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it16;
                ap_reg_phiprechg_p_s_reg_462pp0_it17 <= ap_reg_phiprechg_p_s_reg_462pp0_it16;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it17) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it18 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it17;
                ap_reg_phiprechg_p_s_reg_462pp0_it18 <= ap_reg_phiprechg_p_s_reg_462pp0_it17;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it18) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it19 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it18;
                ap_reg_phiprechg_p_s_reg_462pp0_it19 <= ap_reg_phiprechg_p_s_reg_462pp0_it18;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it19) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it20 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it19;
                ap_reg_phiprechg_p_s_reg_462pp0_it20 <= ap_reg_phiprechg_p_s_reg_462pp0_it19;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it20) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it21 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it20;
                ap_reg_phiprechg_p_s_reg_462pp0_it21 <= ap_reg_phiprechg_p_s_reg_462pp0_it20;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it21) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it22 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it21;
                ap_reg_phiprechg_p_s_reg_462pp0_it22 <= ap_reg_phiprechg_p_s_reg_462pp0_it21;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it23 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it22;
                ap_reg_phiprechg_p_s_reg_462pp0_it23 <= ap_reg_phiprechg_p_s_reg_462pp0_it22;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it23) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it24 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it23;
                ap_reg_phiprechg_p_s_reg_462pp0_it24 <= ap_reg_phiprechg_p_s_reg_462pp0_it23;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it24) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it25 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it24;
                ap_reg_phiprechg_p_s_reg_462pp0_it25 <= ap_reg_phiprechg_p_s_reg_462pp0_it24;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it25) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it26 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it25;
                ap_reg_phiprechg_p_s_reg_462pp0_it26 <= ap_reg_phiprechg_p_s_reg_462pp0_it25;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it26) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it27 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it26;
                ap_reg_phiprechg_p_s_reg_462pp0_it27 <= ap_reg_phiprechg_p_s_reg_462pp0_it26;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it27) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it28 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it27;
                ap_reg_phiprechg_p_s_reg_462pp0_it28 <= ap_reg_phiprechg_p_s_reg_462pp0_it27;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it28) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it29 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it28;
                ap_reg_phiprechg_p_s_reg_462pp0_it29 <= ap_reg_phiprechg_p_s_reg_462pp0_it28;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_p_Result_16_reg_401pp0_it30 <= ap_reg_phiprechg_p_Result_16_reg_401pp0_it29;
                ap_reg_phiprechg_p_s_reg_462pp0_it30 <= ap_reg_phiprechg_p_s_reg_462pp0_it29;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_phiprechg_tmp_9_reg_336pp0_it13 <= ap_reg_phiprechg_tmp_9_reg_336pp0_it12;
                cos_basis_reg_311 <= ap_reg_phiprechg_cos_basis_reg_311pp0_it12;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then
                ap_reg_ppstg_closepath_reg_1325_pp0_it1 <= closepath_reg_1325;
                ap_reg_ppstg_do_cos_read_reg_1301_pp0_it1 <= do_cos_read_reg_1301;
                ap_reg_ppstg_loc_V_1_reg_1319_pp0_it1 <= loc_V_1_reg_1319;
                ap_reg_ppstg_loc_V_reg_1311_pp0_it1 <= loc_V_reg_1311;
                ap_reg_ppstg_p_Result_s_reg_1305_pp0_it1 <= p_Result_s_reg_1305;
                ap_reg_ppstg_tmp_16_reg_1332_pp0_it1 <= tmp_16_reg_1332;
                closepath_reg_1325 <= closepath_fu_506_p2;
                do_cos_read_reg_1301 <= do_cos_read_read_fu_228_p2;
                loc_V_1_reg_1319 <= loc_V_1_fu_502_p1;
                loc_V_reg_1311 <= p_Val2_32_fu_480_p1(30 downto 23);
                p_Result_s_reg_1305 <= p_Val2_32_fu_480_p1(31 downto 31);
                tmp_16_reg_1332 <= tmp_16_fu_512_p1;
                tmp_17_reg_1342 <= tmp_17_fu_543_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_closepath_reg_1325_pp0_it2 = ap_const_lv1_0))) then
                p_Result_78_4_i_i_i_reg_1372 <= r_V_2_fu_550_p2(99 downto 97);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_closepath_reg_1325_pp0_it8 = ap_const_lv1_0))) then
                tmp_123_3_i_i_i_reg_1435 <= tmp_123_3_i_i_i_fu_734_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_reg_ppstg_closepath_reg_1325_pp0_it3 = ap_const_lv1_0))) then
                tmp_126_4_i_i_i_reg_1390 <= tmp_126_4_i_i_i_fu_625_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = tmp_21_i_fu_1223_p2))) then
                tmp_22_i_reg_1665 <= tmp_22_i_fu_1233_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce) and (ap_const_lv1_0 = or_cond_fu_922_p2))) then
                tmp_i1_reg_1513 <= tmp_i1_fu_928_p2;
            end if;
        end if;
    end process;
    tmp_i_i_i_reg_1377(40 downto 23) <= "000000000000000001";
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(40 downto 23) <= "000000000000000001";
    ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(40 downto 23) <= "000000000000000001";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_ce, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Ex_V_fu_868_p2 <= std_logic_vector(unsigned(storemerge_i_fu_832_p3) - unsigned(tmp_5_i_fu_865_p1));
    Mx_zeros_V_fu_817_p1 <= val_assign_fu_809_p3(5 - 1 downto 0);
    OP1_V_3_fu_994_p1 <= std_logic_vector(resize(unsigned(tmp_2_reg_1527),18));
    addr_V_fu_521_p3 <= 
        ap_const_lv8_3F when (closepath_reg_1325(0) = '1') else 
        p_op_i_fu_516_p2;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it31, ap_ce)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0)) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it9, ap_reg_ppiten_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp0_it12, ap_reg_ppiten_pp0_it13, ap_reg_ppiten_pp0_it14, ap_reg_ppiten_pp0_it15, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it18, ap_reg_ppiten_pp0_it19, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ppiten_pp0_it27, ap_reg_ppiten_pp0_it28, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30, ap_reg_ppiten_pp0_it31)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it9) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it10) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it13) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it14) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it15) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it18) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it19) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it20) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it26) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it27) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it28) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it31))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_cos_basis_reg_311pp0_it11 <= "X";
    ap_reg_phiprechg_out_exp_V_reg_390pp0_it29 <= "XXXXXXXX";
    ap_reg_phiprechg_p_Result_16_reg_401pp0_it12 <= "X";
    ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it30 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_p_s_reg_462pp0_it13 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_shift_1_i_reg_381pp0_it30 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_sin_basis_reg_362pp0_it13 <= "X";
    ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it10 <= "X";
    ap_reg_phiprechg_tmp_9_reg_336pp0_it11 <= "X";
    ap_reg_ppiten_pp0_it0 <= ap_start;
    ap_return <= p_s_phi_fu_467_p8;

    -- ap_sig_bdd_19 assign process. --
    ap_sig_bdd_19_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_19 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_639 assign process. --
    ap_sig_bdd_639_assign_proc : process(ap_reg_ppstg_do_cos_read_reg_1301_pp0_it29, ap_reg_ppstg_or_cond_reg_1509_pp0_it29)
    begin
                ap_sig_bdd_639 <= ((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it29 = ap_const_lv1_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1509_pp0_it29)));
    end process;


    -- ap_sig_bdd_715 assign process. --
    ap_sig_bdd_715_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it13, ap_ce)
    begin
                ap_sig_bdd_715 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it13) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_720 assign process. --
    ap_sig_bdd_720_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it15, ap_ce)
    begin
                ap_sig_bdd_720 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it15) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_735 assign process. --
    ap_sig_bdd_735_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it30, ap_ce)
    begin
                ap_sig_bdd_735 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it30) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_754 assign process. --
    ap_sig_bdd_754_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it29, ap_ce)
    begin
                ap_sig_bdd_754 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it29) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce));
    end process;


    -- ap_sig_bdd_936 assign process. --
    ap_sig_bdd_936_assign_proc : process(ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12, or_cond_fu_922_p2)
    begin
                ap_sig_bdd_936 <= (not((ap_reg_ppstg_do_cos_read_reg_1301_pp0_it12 = ap_const_lv1_0)) and not((ap_const_lv1_0 = or_cond_fu_922_p2)));
    end process;


    -- ap_sig_bdd_941 assign process. --
    ap_sig_bdd_941_assign_proc : process(or_cond_fu_922_p2, tmp_i1_fu_928_p2)
    begin
                ap_sig_bdd_941 <= ((ap_const_lv1_0 = or_cond_fu_922_p2) and not((ap_const_lv1_0 = tmp_i1_fu_928_p2)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_19)
    begin
        if (ap_sig_bdd_19) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it6, ap_reg_ppiten_pp0_it7, ap_reg_ppiten_pp0_it8, ap_reg_ppiten_pp0_it9, ap_reg_ppiten_pp0_it10, ap_reg_ppiten_pp0_it11, ap_reg_ppiten_pp0_it12, ap_reg_ppiten_pp0_it13, ap_reg_ppiten_pp0_it14, ap_reg_ppiten_pp0_it15, ap_reg_ppiten_pp0_it16, ap_reg_ppiten_pp0_it17, ap_reg_ppiten_pp0_it18, ap_reg_ppiten_pp0_it19, ap_reg_ppiten_pp0_it20, ap_reg_ppiten_pp0_it21, ap_reg_ppiten_pp0_it22, ap_reg_ppiten_pp0_it23, ap_reg_ppiten_pp0_it24, ap_reg_ppiten_pp0_it25, ap_reg_ppiten_pp0_it26, ap_reg_ppiten_pp0_it27, ap_reg_ppiten_pp0_it28, ap_reg_ppiten_pp0_it29, ap_reg_ppiten_pp0_it30)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it2) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it3) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it4) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it5) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it6) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it7) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it8) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it9) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it10) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it11) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it12) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it13) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it14) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it15) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it16) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it17) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it18) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it19) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it20) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it21) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it22) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it23) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it24) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it25) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it26) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it27) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it28) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it29) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it30) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    closepath_fu_506_p2 <= "1" when (unsigned(loc_V_fu_492_p4) < unsigned(ap_const_lv8_7E)) else "0";
    cos_basis_phi_fu_316_p12 <= ap_reg_phiprechg_cos_basis_reg_311pp0_it12;
    do_cos_read_read_fu_228_p2 <= (0=>do_cos, others=>'-');

    -- grp_fu_1039_ce assign process. --
    grp_fu_1039_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1039_ce <= ap_const_logic_1;
        else 
            grp_fu_1039_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1039_p0 <= hls_sin_cos_K1_V_load_reg_1568;
    grp_fu_1039_p1 <= grp_fu_1039_p10(17 - 1 downto 0);
    grp_fu_1039_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_p_Val2_s_reg_1522_pp0_it17),40));

    -- grp_fu_1051_ce assign process. --
    grp_fu_1051_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1051_ce <= ap_const_logic_1;
        else 
            grp_fu_1051_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1051_p0 <= grp_fu_1051_p00(17 - 1 downto 0);
    grp_fu_1051_p00 <= std_logic_vector(resize(unsigned(tmp_7_reg_1558),32));
    grp_fu_1051_p1 <= hls_sin_cos_K2_V_load_reg_1573;

    -- grp_fu_1120_ce assign process. --
    grp_fu_1120_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1120_ce <= ap_const_logic_1;
        else 
            grp_fu_1120_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1120_p0 <= r_V_reg_1608;
    grp_fu_1120_p1 <= grp_fu_1120_p10(31 - 1 downto 0);
    grp_fu_1120_p10 <= std_logic_vector(resize(unsigned(p_Mx_V_ret_fu_1106_p3),63));

    -- grp_fu_619_ce assign process. --
    grp_fu_619_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_619_ce <= ap_const_logic_1;
        else 
            grp_fu_619_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_619_p0 <= grp_fu_619_p00(24 - 1 downto 0);
    grp_fu_619_p00 <= std_logic_vector(resize(unsigned(p_Result_19_fu_605_p3),41));
    grp_fu_619_p1 <= grp_fu_619_p10(17 - 1 downto 0);
    grp_fu_619_p10 <= std_logic_vector(resize(unsigned(p_Result_78_i_i_i_reg_1352),41));

    -- grp_fu_632_ce assign process. --
    grp_fu_632_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_632_ce <= ap_const_logic_1;
        else 
            grp_fu_632_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_632_p0 <= tmp_i_i_i_reg_1377(24 - 1 downto 0);
    grp_fu_632_p1 <= grp_fu_632_p10(17 - 1 downto 0);
    grp_fu_632_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_p_Result_78_1_i_i_i_reg_1357_pp0_it4),41));

    -- grp_fu_640_ce assign process. --
    grp_fu_640_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_640_ce <= ap_const_logic_1;
        else 
            grp_fu_640_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_640_p0 <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it5(24 - 1 downto 0);
    grp_fu_640_p1 <= grp_fu_640_p10(17 - 1 downto 0);
    grp_fu_640_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_p_Result_78_2_i_i_i_reg_1362_pp0_it5),41));

    -- grp_fu_658_ce assign process. --
    grp_fu_658_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_658_ce <= ap_const_logic_1;
        else 
            grp_fu_658_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_658_p0 <= ap_reg_ppstg_tmp_i_i_i_reg_1377_pp0_it6(24 - 1 downto 0);
    grp_fu_658_p1 <= grp_fu_658_p10(17 - 1 downto 0);
    grp_fu_658_p10 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_p_Result_78_3_i_i_i_reg_1367_pp0_it6),41));

    -- grp_fu_997_ce assign process. --
    grp_fu_997_ce_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_997_ce <= ap_const_logic_1;
        else 
            grp_fu_997_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_997_p0 <= OP1_V_3_fu_994_p1(9 - 1 downto 0);
    grp_fu_997_p1 <= OP1_V_3_fu_994_p1(9 - 1 downto 0);
    hls_ref_4oPi_table_100_V_address0 <= tmp_24_i_i_fu_538_p1(4 - 1 downto 0);

    -- hls_ref_4oPi_table_100_V_ce0 assign process. --
    hls_ref_4oPi_table_100_V_ce0_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            hls_ref_4oPi_table_100_V_ce0 <= ap_const_logic_1;
        else 
            hls_ref_4oPi_table_100_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K0_V_address0 <= tmp_1_fu_1016_p1(8 - 1 downto 0);

    -- hls_sin_cos_K0_V_ce0 assign process. --
    hls_sin_cos_K0_V_ce0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it16, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            hls_sin_cos_K0_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K1_V_address0 <= tmp_1_fu_1016_p1(8 - 1 downto 0);

    -- hls_sin_cos_K1_V_ce0 assign process. --
    hls_sin_cos_K1_V_ce0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it16, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            hls_sin_cos_K1_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    hls_sin_cos_K2_V_address0 <= tmp_1_fu_1016_p1(8 - 1 downto 0);

    -- hls_sin_cos_K2_V_ce0 assign process. --
    hls_sin_cos_K2_V_ce0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it16, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it16) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_ce))) then 
            hls_sin_cos_K2_V_ce0 <= ap_const_logic_1;
        else 
            hls_sin_cos_K2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    loc_V_1_fu_502_p1 <= p_Val2_32_fu_480_p1(23 - 1 downto 0);
    loc_V_fu_492_p4 <= p_Val2_32_fu_480_p1(30 downto 23);
    or_cond_fu_922_p2 <= (tmp_11_fu_912_p2 and tmp_12_fu_917_p2);

    -- out_exp_V_phi_fu_394_p4 assign process. --
    out_exp_V_phi_fu_394_p4_assign_proc : process(ap_reg_ppiten_pp0_it31, ap_reg_ppstg_tmp_21_i_reg_1661_pp0_it30, phitmp_i_fu_1280_p2, ap_reg_phiprechg_out_exp_V_reg_390pp0_it31)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_21_i_reg_1661_pp0_it30))) then 
            out_exp_V_phi_fu_394_p4 <= phitmp_i_fu_1280_p2;
        else 
            out_exp_V_phi_fu_394_p4 <= ap_reg_phiprechg_out_exp_V_reg_390pp0_it31;
        end if; 
    end process;

    p_Mx_V_ret_fu_1106_p3 <= 
        ap_const_lv31_7FFFFFFF when (ap_reg_ppstg_cos_basis_reg_311_pp0_it21(0) = '1') else 
        ap_reg_ppstg_p_Val2_38_reg_1496_pp0_it21;
    p_Result_19_fu_605_p3 <= (ap_const_lv1_1 & ap_reg_ppstg_loc_V_1_reg_1319_pp0_it3);
    p_Result_20_fu_784_p3 <= (p_Result_i3_i_reg_1455 & ap_const_lv1_1);
    
    p_Result_21_fu_791_p4_proc : process(p_Result_20_fu_784_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(19+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(19+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable p_Result_21_fu_791_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(19 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(19 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_12(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Result_20_fu_784_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(19-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(19-1-unsigned(ap_const_lv32_12(5-1 downto 0)));
            for p_Result_21_fu_791_p4_i in 0 to 19-1 loop
                v0_cpy(p_Result_21_fu_791_p4_i) := p_Result_20_fu_784_p3(19-1-p_Result_21_fu_791_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy),to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(19-1 downto 0)))));
        res_mask := res_mask(19-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_21_fu_791_p4 <= resvalue(19-1 downto 0);
    end process;

    p_Result_22_fu_801_p3 <= (ap_const_lv13_1FFF & p_Result_21_fu_791_p4);
    p_Result_23_fu_1009_p3 <= (ap_reg_phiprechg_sin_basis_reg_362pp0_it16 & ap_reg_ppstg_p_Result_s_30_reg_1517_pp0_it15);
    p_Result_24_fu_882_p3 <= (ap_reg_ppstg_p_Result_s_reg_1305_pp0_it11 & ap_reg_ppstg_p_Val2_37_reg_1445_pp0_it11);
    p_Result_25_fu_1255_p3 <= (ap_reg_ppstg_p_Result_s_reg_1305_pp0_it29 & ap_const_lv31_0);
    p_Result_26_fu_1286_p4 <= ((ap_reg_phiprechg_p_Result_16_reg_401pp0_it31 & out_exp_V_phi_fu_394_p4) & p_Val2_39_fu_1266_p4);
    p_Result_4_fu_1195_p5 <= (tmp_1_i_fu_1188_p3 & ap_const_lv32_0(15 downto 0));
    p_Result_61_i_fu_1154_p5 <= (tmp_i_fu_1146_p3 & ap_const_lv32_0(14 downto 0));
    p_Result_64_i_fu_1136_p4 <= grp_fu_1120_p2(61 downto 46);
    p_Val2_0_i234_in_i_fu_957_p3 <= 
        tmp_10_i_cast_fu_947_p1 when (ap_reg_ppstg_isNeg_reg_1487_pp0_it13(0) = '1') else 
        tmp_12_i_fu_951_p2;
    p_Val2_18_fu_842_p2 <= std_logic_vector(shift_left(unsigned(ap_reg_ppstg_p_Val2_8_reg_1450_pp0_it11),to_integer(unsigned('0' & tmp_2_i_fu_839_p1(31-1 downto 0)))));
    p_Val2_23_fu_1077_p3 <= (ap_reg_ppstg_p_Val2_22_reg_1563_pp0_it20 & ap_const_lv1_0);
    p_Val2_24_fu_1091_p2 <= std_logic_vector(signed(tmp_3_fu_1084_p1) + signed(tmp_5_fu_1088_p1));
    p_Val2_32_fu_480_p1 <= t_in;
    p_Val2_37_fu_750_p3 <= 
        ap_const_lv3_0 when (ap_reg_ppstg_closepath_reg_1325_pp0_it9(0) = '1') else 
        tmp_123_3_i_i_i_reg_1435;
    p_Val2_38_fu_891_p2 <= std_logic_vector(unsigned(p_Val2_19_reg_1471) + unsigned(tmp_4_i_fu_888_p1));
    p_Val2_39_fu_1266_p4 <= ap_reg_phiprechg_p_Val2_26_in_reg_372pp0_it31(29 downto 7);
    p_Val2_7_fu_743_p4 <= ((tmp_22_reg_1440 & ap_reg_ppstg_tmp_21_reg_1430_pp0_it9) & ap_reg_ppstg_tmp_23_reg_1420_pp0_it9);
    p_Val2_8_fu_766_p3 <= 
        p_Val2_i_fu_760_p2 when (tmp_24_fu_756_p1(0) = '1') else 
        p_Val2_7_fu_743_p4;
    p_Val2_i_fu_760_p2 <= std_logic_vector(unsigned(ap_const_lv49_0) - unsigned(p_Val2_7_fu_743_p4));
    p_i_fu_827_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_loc_V_reg_1311_pp0_it11) + unsigned(ap_const_lv8_83));
    p_op_i_fu_516_p2 <= std_logic_vector(unsigned(loc_V_reg_1311) + unsigned(ap_const_lv8_C2));

    -- p_s_phi_fu_467_p8 assign process. --
    p_s_phi_fu_467_p8_assign_proc : process(ap_reg_ppiten_pp0_it31, ap_reg_ppstg_or_cond_reg_1509_pp0_it30, ap_reg_ppstg_tmp_i1_reg_1513_pp0_it30, ret_i_i_fu_1296_p1, ap_reg_phiprechg_p_s_reg_462pp0_it31)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it31) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1509_pp0_it30) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_i1_reg_1513_pp0_it30))) then 
            p_s_phi_fu_467_p8 <= ret_i_i_fu_1296_p1;
        else 
            p_s_phi_fu_467_p8 <= ap_reg_phiprechg_p_s_reg_462pp0_it31;
        end if; 
    end process;

    phitmp_i_fu_1280_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_22_i_reg_1665_pp0_it30) - unsigned(tmp_30_fu_1276_p1));
    r_V_2_fu_550_p2 <= std_logic_vector(shift_left(unsigned(table_100_V_reg_1347),to_integer(unsigned('0' & tmp_25_i_i_fu_547_p1(31-1 downto 0)))));
    r_V_3_i_i_i_cast_fu_724_p4 <= tmp_123_2_i_i_i_fu_718_p2(19 downto 17);
    r_V_fu_1100_p2 <= std_logic_vector(signed(p_Val2_24_fu_1091_p2) + signed(tmp_25_cast_fu_1097_p1));
    ret_i_i_fu_1296_p1 <= p_Result_26_fu_1286_p4;
    ret_i_i_i_fu_1262_p1 <= p_Result_25_fu_1255_p3;
        sh_assign_1_i_cast8_fu_933_p1 <= std_logic_vector(resize(signed(sh_assign_reg_1503),32));

        sh_assign_1_i_cast_fu_936_p1 <= std_logic_vector(resize(signed(sh_assign_reg_1503),31));

    sh_assign_fu_905_p3 <= 
        tmp_7_i_fu_899_p2 when (isNeg_reg_1487(0) = '1') else 
        sh_i_cast_fu_896_p1;
        sh_i_cast_fu_896_p1 <= std_logic_vector(resize(signed(Ex_V_reg_1481),9));

    shift_2_1_i_fu_1246_p2 <= std_logic_vector(unsigned(tmp_97_1_i_reg_1645) + unsigned(ap_const_lv32_10));
    storemerge_i_fu_832_p3 <= 
        p_i_fu_827_p2 when (ap_reg_ppstg_closepath_reg_1325_pp0_it11(0) = '1') else 
        ap_const_lv8_0;
    tmp_104_1_i_fu_1251_p2 <= std_logic_vector(shift_left(unsigned(tmp_104_i_reg_1655),to_integer(unsigned('0' & tmp_29_reg_1650(31-1 downto 0)))));
    tmp_104_i_fu_1219_p2 <= std_logic_vector(shift_left(unsigned(ain_V_reg_1623),to_integer(unsigned('0' & tmp_28_reg_1640(31-1 downto 0)))));
    tmp_105_i_fu_1241_p2 <= "1" when (ap_reg_ppstg_tmp_97_i_reg_1634_pp0_it29 = ap_const_lv32_10) else "0";
    tmp_10_i_cast_fu_947_p1 <= std_logic_vector(resize(unsigned(tmp_10_i_fu_942_p2),32));
    tmp_10_i_fu_942_p2 <= std_logic_vector(shift_right(unsigned(p_Val2_38_reg_1496),to_integer(unsigned('0' & sh_assign_1_i_cast_fu_936_p1(31-1 downto 0)))));
    tmp_11_fu_912_p2 <= "1" when (ap_reg_ppstg_loc_V_reg_1311_pp0_it12 = ap_const_lv8_0) else "0";
    tmp_123_1_i_i_i_fu_695_p2 <= std_logic_vector(unsigned(grp_fu_640_p2) + unsigned(tmp_19_fu_692_p1));
    tmp_123_2_i_i_i_fu_718_p2 <= std_logic_vector(unsigned(grp_fu_658_p2) + unsigned(tmp_20_fu_715_p1));
    tmp_123_3_i_i_i_fu_734_p2 <= std_logic_vector(signed(ap_reg_ppstg_tmp_126_4_i_i_i_reg_1390_pp0_it8) + signed(r_V_3_i_i_i_cast_fu_724_p4));
    tmp_123_i_i_i_fu_666_p2 <= std_logic_vector(unsigned(grp_fu_632_p2) + unsigned(tmp_18_fu_663_p1));
    tmp_126_4_i_i_i_fu_625_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(ap_reg_ppstg_tmp_16_reg_1332_pp0_it3) * signed(p_Result_78_4_i_i_i_reg_1372))), 3));
    tmp_12_fu_917_p2 <= "1" when (ap_reg_ppstg_loc_V_1_reg_1319_pp0_it12 = ap_const_lv23_0) else "0";
    tmp_12_i_fu_951_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_i_fu_939_p1),to_integer(unsigned('0' & sh_assign_1_i_cast8_fu_933_p1(31-1 downto 0)))));
    tmp_16_fu_512_p1 <= p_Val2_32_fu_480_p1(3 - 1 downto 0);
    tmp_17_fu_543_p1 <= addr_V_fu_521_p3(4 - 1 downto 0);
    tmp_18_fu_663_p1 <= std_logic_vector(resize(unsigned(r_V_i_i_i_reg_1405),41));
    tmp_19_fu_692_p1 <= std_logic_vector(resize(unsigned(r_V_1_i_i_i_reg_1415),41));
    tmp_1_fu_1016_p1 <= std_logic_vector(resize(unsigned(p_Result_23_fu_1009_p3),64));
    tmp_1_i_fu_1188_p3 <= (p_Result_i_reg_1629 & ap_const_lv1_1);
    tmp_20_fu_715_p1 <= std_logic_vector(resize(unsigned(r_V_2_i_i_i_reg_1425),41));
    tmp_21_fu_711_p1 <= tmp_123_1_i_i_i_fu_695_p2(17 - 1 downto 0);
    tmp_21_i_fu_1223_p2 <= "1" when (ain_V_reg_1623 = ap_const_lv31_0) else "0";
    tmp_22_fu_739_p1 <= tmp_123_2_i_i_i_fu_718_p2(17 - 1 downto 0);
    tmp_22_i_fu_1233_p3 <= 
        ap_const_lv8_7F when (ap_reg_ppstg_cos_basis_reg_311_pp0_it28(0) = '1') else 
        tmp_6_i_op_fu_1228_p2;
    tmp_24_fu_756_p1 <= p_Val2_37_fu_750_p3(1 - 1 downto 0);
    tmp_24_i_i_fu_538_p1 <= std_logic_vector(resize(unsigned(tmp_fu_528_p4),64));
        tmp_25_cast_fu_1097_p1 <= std_logic_vector(resize(signed(tmp_6_reg_1603),32));

    tmp_25_i_i_fu_547_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_tmp_17_reg_1342_pp0_it2),100));
    tmp_28_fu_1184_p1 <= tmp_97_i_fu_1176_p3(31 - 1 downto 0);
    tmp_29_fu_1215_p1 <= tmp_97_1_i_fu_1207_p3(31 - 1 downto 0);
    tmp_2_i_fu_839_p1 <= std_logic_vector(resize(unsigned(Mx_zeros_V_reg_1460),49));
    tmp_30_fu_1276_p1 <= ap_reg_phiprechg_shift_1_i_reg_381pp0_it31(8 - 1 downto 0);
        tmp_3_fu_1084_p1 <= std_logic_vector(resize(signed(p_Val2_23_fu_1077_p3),32));

    tmp_4_i_fu_888_p1 <= std_logic_vector(resize(unsigned(tmp_26_reg_1476),31));
        tmp_5_fu_1088_p1 <= std_logic_vector(resize(signed(tmp_4_reg_1598),32));

    tmp_5_i_fu_865_p1 <= std_logic_vector(resize(unsigned(Mx_zeros_V_reg_1460),8));
    tmp_6_i_op_fu_1228_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_Ex_V_reg_1481_pp0_it28) + unsigned(ap_const_lv8_7F));
    tmp_7_i_fu_899_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(sh_i_cast_fu_896_p1));
    tmp_8_fu_821_p2 <= (ap_reg_phiprechg_swap_table_load_phi_reg_288pp0_it11 xor ap_const_lv1_1);
    tmp_8_i_fu_939_p1 <= std_logic_vector(resize(unsigned(p_Val2_38_reg_1496),32));
    
    tmp_97_1_i_fu_1207_p3_proc : process(p_Result_4_fu_1195_p5)
    begin
        tmp_97_1_i_fu_1207_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_4_fu_1195_p5(i) = '1' then
                tmp_97_1_i_fu_1207_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    
    tmp_97_i_fu_1176_p3_proc : process(p_Result_61_i_fu_1154_p5)
    begin
        tmp_97_i_fu_1176_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 32 - 1 downto 0 loop
            if p_Result_61_i_fu_1154_p5(i) = '1' then
                tmp_97_i_fu_1176_p3 <= std_logic_vector(to_unsigned(32-1-i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_fu_528_p4 <= addr_V_fu_521_p3(7 downto 4);
    tmp_i1_fu_928_p2 <= "1" when (ap_reg_ppstg_loc_V_reg_1311_pp0_it12 = ap_const_lv8_FF) else "0";
    tmp_i_fu_1146_p3 <= (p_Result_64_i_fu_1136_p4 & ap_const_lv1_1);
    tmp_i_i_i_fu_612_p1 <= std_logic_vector(resize(unsigned(p_Result_19_fu_605_p3),41));
    tmp_s_fu_1003_p2 <= (ap_reg_ppstg_tmp_9_reg_336_pp0_it14 xor ap_const_lv1_1);
    
    val_assign_fu_809_p3_proc : process(p_Result_22_fu_801_p3)
    begin
        val_assign_fu_809_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_22_fu_801_p3(i) = '1' then
                val_assign_fu_809_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

end behav;
