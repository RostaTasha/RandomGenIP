-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity rand_top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s1 : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    stream_out_ap_ack : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of rand_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "rand_top,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v2000tfhg1761-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.344000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=6,HLS_SYN_DSP=41,HLS_SYN_FF=9679,HLS_SYN_LUT=12976}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv32_E2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100010";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_2F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00101111100000000000000000000000";
    constant ap_const_lv32_40C90FDB : STD_LOGIC_VECTOR (31 downto 0) := "01000000110010010000111111011011";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv8_1C : STD_LOGIC_VECTOR (7 downto 0) := "00011100";
    constant ap_const_lv32_26F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101111";
    constant ap_const_lv32_E3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100011";
    constant ap_const_lv32_18D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110001101";
    constant ap_const_lv9_11C : STD_LOGIC_VECTOR (8 downto 0) := "100011100";
    constant ap_const_lv9_11D : STD_LOGIC_VECTOR (8 downto 0) := "100011101";
    constant ap_const_lv32_1C7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000111";
    constant ap_const_lv32_FFFFFE39 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111000111001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_A9 : STD_LOGIC_VECTOR (8 downto 0) := "010101001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFE73 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111001110011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1D : STD_LOGIC_VECTOR (7 downto 0) := "00011101";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_30C90FDB : STD_LOGIC_VECTOR (31 downto 0) := "00110000110010010000111111011011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_19 : BOOLEAN;
    signal uni_num_mt3_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt3_0_ce0 : STD_LOGIC;
    signal uni_num_mt3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt3_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt3_0_ce1 : STD_LOGIC;
    signal uni_num_mt3_0_we1 : STD_LOGIC;
    signal uni_num_mt3_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt2_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt2_0_ce0 : STD_LOGIC;
    signal uni_num_mt2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt2_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt2_0_ce1 : STD_LOGIC;
    signal uni_num_mt2_0_we1 : STD_LOGIC;
    signal uni_num_mt2_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt1_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt1_0_ce0 : STD_LOGIC;
    signal uni_num_mt1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt1_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt1_0_ce1 : STD_LOGIC;
    signal uni_num_mt1_0_we1 : STD_LOGIC;
    signal uni_num_mt1_0_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mti_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal uni_num_prev_val_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal uni_num_mt3_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt3_1_ce0 : STD_LOGIC;
    signal uni_num_mt3_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt3_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt3_1_ce1 : STD_LOGIC;
    signal uni_num_mt3_1_we1 : STD_LOGIC;
    signal uni_num_mt3_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt2_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt2_1_ce0 : STD_LOGIC;
    signal uni_num_mt2_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt2_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt2_1_ce1 : STD_LOGIC;
    signal uni_num_mt2_1_we1 : STD_LOGIC;
    signal uni_num_mt2_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt1_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt1_1_ce0 : STD_LOGIC;
    signal uni_num_mt1_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mt1_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal uni_num_mt1_1_ce1 : STD_LOGIC;
    signal uni_num_mt1_1_we1 : STD_LOGIC;
    signal uni_num_mt1_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal uni_num_mti_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal uni_num_prev_val_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i1_1_reg_1265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_127 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it13 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it14 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it15 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it16 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it17 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it18 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it19 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it20 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it21 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it22 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it23 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it24 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it25 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it26 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it27 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it28 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it29 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it30 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it31 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it32 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it33 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it34 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it35 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it36 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it37 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it38 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it39 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it40 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it41 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it42 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it43 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it44 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it45 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it46 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it47 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it48 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it49 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it50 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it51 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it52 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it53 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it54 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it55 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it56 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it57 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it58 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it59 : STD_LOGIC := '0';
    signal ap_sig_ioackin_stream_out_ap_ack : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it60 : STD_LOGIC := '0';
    signal ap_reg_ppstg_i1_1_reg_1265_pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_1_reg_1265_pp0_it2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_1_reg_1265_pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_1_reg_1265_pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_1_reg_1265_pp0_it5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_569_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_reg_1273 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_1273_pp0_it1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_1273_pp0_it2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_1273_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_1273_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_62_reg_1273_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_8_fu_585_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_8_reg_1278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_a1_8_reg_1278_pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_63_reg_1290 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_ppstg_tmp_63_reg_1290_pp0_it1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_37_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_sel_tmp8_reg_1314_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_reg_1324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_reg_1324_pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_reg_1324_pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_reg_1324_pp0_it5 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_i1_reg_1324_pp0_it6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_638_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_reg_1332 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_59_reg_1332_pp0_it3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_59_reg_1332_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_59_reg_1332_pp0_it5 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_tmp_59_reg_1332_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_fu_654_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_reg_1337 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_reg_1350 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_666_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_reg_1356 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_1361 : STD_LOGIC_VECTOR (0 downto 0);
    signal a1_6_fu_721_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal a1_6_reg_1366 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp3_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1378 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond1_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel3_fu_789_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_reg_1392 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_fu_805_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp4_reg_1397 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a1_3_cast_fu_848_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_2_fu_852_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal s3_0_i1_fu_860_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a3_1_fu_868_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_1_cast_fu_873_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_cast_fu_882_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal a3_cast_fu_891_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal s2_4_i_fu_953_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal s2_4_i_reg_1453 : STD_LOGIC_VECTOR (1 downto 0);
    signal s3_4_i_fu_981_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal s3_4_i_reg_1459 : STD_LOGIC_VECTOR (1 downto 0);
    signal reg2_4_fu_1035_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg2_4_reg_1495 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg3_7_fu_1061_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg3_7_reg_1501 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg2_3_fu_1089_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg2_3_reg_1506 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg3_2_fu_1117_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg3_2_reg_1512 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_3_rand_top_ex_gen_uni_num_fu_478_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_3_reg_1517 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_1_rand_top_ex_gen_uni_num_fu_485_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_1_reg_1525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_reg_1533 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_reg_1537 : STD_LOGIC_VECTOR (0 downto 0);
    signal temper_1_rand_top_tempering_fu_468_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal temper_1_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal temper_rand_top_tempering_fu_473_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal temper_reg_1553 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_temper_reg_1553_pp0_it8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_1213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_1559 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it21 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_57_reg_1559_pp0_it22 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_1564 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it13 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it15 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it17 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it18 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_34_reg_1564_pp0_it19 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_1569 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_i_reg_1579 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_i1_reg_1584 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_op_i_op_reg_1594 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_531_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal logfs_reg_1599 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mults_reg_1604 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rho_reg_1609 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal sinfs_reg_1615 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal cosfs_reg_1620 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_777 : BOOLEAN;
    signal grp_rand_top_set_seed_fu_444_ap_done : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_ap_done : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_start : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_done : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_idle : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_ready : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_ce : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_414_t_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_414_do_cos : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_start : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_done : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_idle : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_ready : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_ce : STD_LOGIC;
    signal grp_rand_top_sinf_or_cosf_fu_429_t_in : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_429_do_cos : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_ap_start : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_ap_idle : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_ap_ready : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_s : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_444_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_ap_start : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_ap_idle : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_ap_ready : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce0 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_we1 : STD_LOGIC;
    signal grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_s : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_set_seed_fu_456_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal temper_1_rand_top_tempering_fu_468_x : STD_LOGIC_VECTOR (31 downto 0);
    signal temper_rand_top_tempering_fu_473_x : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_3_rand_top_ex_gen_uni_num_fu_478_A_read : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_3_rand_top_ex_gen_uni_num_fu_478_B : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_3_rand_top_ex_gen_uni_num_fu_478_C : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_1_rand_top_ex_gen_uni_num_fu_485_A_read : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_1_rand_top_ex_gen_uni_num_fu_485_B : STD_LOGIC_VECTOR (31 downto 0);
    signal reg1_1_rand_top_ex_gen_uni_num_fu_485_C : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a1_4_i1_reg_311pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a2_4_i1_reg_328pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a3_4_i1_reg_348pp0_it3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_s2_4_i1_reg_368pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_s2_4_i1_reg_368pp0_it5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_s3_4_i1_reg_391pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_phiprechg_s3_4_i1_reg_391pp0_it5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal mults1_fu_1230_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal tmp_43_fu_988_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_44_fu_993_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_45_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_20_fu_1002_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_fu_1007_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_fu_1012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_1170_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_1185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1194_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_fu_1204_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_28_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_stream_out_ap_ack : STD_LOGIC := '0';
    signal grp_fu_492_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_507_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_512_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_516_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_520_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_523_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_531_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_2_fu_579_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp7_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_618_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i2_fu_648_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a1_6_cast_fu_676_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a1_4_fu_696_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal a1_5_fu_714_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sel_tmp2_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a2_3_cast_fu_681_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal a2_3_fu_691_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel_cast_cast_fu_743_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal newSel_fu_751_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal newSel2_fu_771_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond2_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel86_cast_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel1_fu_763_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp34_v_cast_cast_fu_797_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_536_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal a1_2_fu_840_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a2_1_fu_835_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal a2_fu_877_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal a3_fu_886_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal a1_7_fu_902_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal newSel90_cast_cast_fu_912_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel4_fu_919_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp5_fu_932_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp9_fu_946_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp6_fu_939_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp10_fu_960_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal s3_0_i_fu_895_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp12_fu_974_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sel_tmp11_fu_967_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a1_4_i_cast_fu_908_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel5_fu_925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_1022_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg2_2_fu_1027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg3_5_fu_1053_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg2_1_fu_1081_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg3_1_fu_1109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_1165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_1175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_1189_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_516_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_toint_fu_1242_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal d0_toint_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_492_ce : STD_LOGIC;
    signal grp_fu_497_ce : STD_LOGIC;
    signal grp_fu_502_ce : STD_LOGIC;
    signal grp_fu_507_ce : STD_LOGIC;
    signal grp_fu_512_ce : STD_LOGIC;
    signal grp_fu_516_ce : STD_LOGIC;
    signal grp_fu_520_ce : STD_LOGIC;
    signal grp_fu_523_ce : STD_LOGIC;
    signal grp_fu_526_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_526_ce : STD_LOGIC;
    signal grp_fu_531_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_531_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component rand_top_sinf_or_cosf IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        t_in : IN STD_LOGIC_VECTOR (31 downto 0);
        do_cos : IN STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_set_seed IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fpga_uni_num_mt3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt3_ce0 : OUT STD_LOGIC;
        fpga_uni_num_mt3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fpga_uni_num_mt3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt3_ce1 : OUT STD_LOGIC;
        fpga_uni_num_mt3_we1 : OUT STD_LOGIC;
        fpga_uni_num_mt3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fpga_uni_num_mt2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt2_ce0 : OUT STD_LOGIC;
        fpga_uni_num_mt2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fpga_uni_num_mt2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt2_ce1 : OUT STD_LOGIC;
        fpga_uni_num_mt2_we1 : OUT STD_LOGIC;
        fpga_uni_num_mt2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        fpga_uni_num_mt1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt1_ce0 : OUT STD_LOGIC;
        fpga_uni_num_mt1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        fpga_uni_num_mt1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fpga_uni_num_mt1_ce1 : OUT STD_LOGIC;
        fpga_uni_num_mt1_we1 : OUT STD_LOGIC;
        fpga_uni_num_mt1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        s : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_tempering IS
    port (
        x : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_ex_gen_uni_num IS
    port (
        A_read : IN STD_LOGIC_VECTOR (31 downto 0);
        B : IN STD_LOGIC_VECTOR (31 downto 0);
        C : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_fmul_32ns_32ns_32_5_max_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_fmul_32ns_32ns_32_6_no_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_uitofp_32ns_32_6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_fsqrt_32ns_32ns_32_16 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_flog_32ns_32ns_32_13_no_dsp IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_uni_num_mt3_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component rand_top_uni_num_mt2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    uni_num_mt3_0_U : component rand_top_uni_num_mt3_0
    generic map (
        DataWidth => 32,
        AddressRange => 227,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt3_0_address0,
        ce0 => uni_num_mt3_0_ce0,
        q0 => uni_num_mt3_0_q0,
        address1 => uni_num_mt3_0_address1,
        ce1 => uni_num_mt3_0_ce1,
        we1 => uni_num_mt3_0_we1,
        d1 => uni_num_mt3_0_d1);

    uni_num_mt2_0_U : component rand_top_uni_num_mt2_0
    generic map (
        DataWidth => 32,
        AddressRange => 170,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt2_0_address0,
        ce0 => uni_num_mt2_0_ce0,
        q0 => uni_num_mt2_0_q0,
        address1 => uni_num_mt2_0_address1,
        ce1 => uni_num_mt2_0_ce1,
        we1 => uni_num_mt2_0_we1,
        d1 => uni_num_mt2_0_d1);

    uni_num_mt1_0_U : component rand_top_uni_num_mt3_0
    generic map (
        DataWidth => 32,
        AddressRange => 227,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt1_0_address0,
        ce0 => uni_num_mt1_0_ce0,
        q0 => uni_num_mt1_0_q0,
        address1 => uni_num_mt1_0_address1,
        ce1 => uni_num_mt1_0_ce1,
        we1 => uni_num_mt1_0_we1,
        d1 => uni_num_mt1_0_d1);

    uni_num_mt3_1_U : component rand_top_uni_num_mt3_0
    generic map (
        DataWidth => 32,
        AddressRange => 227,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt3_1_address0,
        ce0 => uni_num_mt3_1_ce0,
        q0 => uni_num_mt3_1_q0,
        address1 => uni_num_mt3_1_address1,
        ce1 => uni_num_mt3_1_ce1,
        we1 => uni_num_mt3_1_we1,
        d1 => uni_num_mt3_1_d1);

    uni_num_mt2_1_U : component rand_top_uni_num_mt2_0
    generic map (
        DataWidth => 32,
        AddressRange => 170,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt2_1_address0,
        ce0 => uni_num_mt2_1_ce0,
        q0 => uni_num_mt2_1_q0,
        address1 => uni_num_mt2_1_address1,
        ce1 => uni_num_mt2_1_ce1,
        we1 => uni_num_mt2_1_we1,
        d1 => uni_num_mt2_1_d1);

    uni_num_mt1_1_U : component rand_top_uni_num_mt3_0
    generic map (
        DataWidth => 32,
        AddressRange => 227,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => uni_num_mt1_1_address0,
        ce0 => uni_num_mt1_1_ce0,
        q0 => uni_num_mt1_1_q0,
        address1 => uni_num_mt1_1_address1,
        ce1 => uni_num_mt1_1_ce1,
        we1 => uni_num_mt1_1_we1,
        d1 => uni_num_mt1_1_d1);

    grp_rand_top_sinf_or_cosf_fu_414 : component rand_top_sinf_or_cosf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rand_top_sinf_or_cosf_fu_414_ap_start,
        ap_done => grp_rand_top_sinf_or_cosf_fu_414_ap_done,
        ap_idle => grp_rand_top_sinf_or_cosf_fu_414_ap_idle,
        ap_ready => grp_rand_top_sinf_or_cosf_fu_414_ap_ready,
        ap_ce => grp_rand_top_sinf_or_cosf_fu_414_ap_ce,
        t_in => grp_rand_top_sinf_or_cosf_fu_414_t_in,
        do_cos => grp_rand_top_sinf_or_cosf_fu_414_do_cos,
        ap_return => grp_rand_top_sinf_or_cosf_fu_414_ap_return);

    grp_rand_top_sinf_or_cosf_fu_429 : component rand_top_sinf_or_cosf
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rand_top_sinf_or_cosf_fu_429_ap_start,
        ap_done => grp_rand_top_sinf_or_cosf_fu_429_ap_done,
        ap_idle => grp_rand_top_sinf_or_cosf_fu_429_ap_idle,
        ap_ready => grp_rand_top_sinf_or_cosf_fu_429_ap_ready,
        ap_ce => grp_rand_top_sinf_or_cosf_fu_429_ap_ce,
        t_in => grp_rand_top_sinf_or_cosf_fu_429_t_in,
        do_cos => grp_rand_top_sinf_or_cosf_fu_429_do_cos,
        ap_return => grp_rand_top_sinf_or_cosf_fu_429_ap_return);

    grp_rand_top_set_seed_fu_444 : component rand_top_set_seed
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rand_top_set_seed_fu_444_ap_start,
        ap_done => grp_rand_top_set_seed_fu_444_ap_done,
        ap_idle => grp_rand_top_set_seed_fu_444_ap_idle,
        ap_ready => grp_rand_top_set_seed_fu_444_ap_ready,
        fpga_uni_num_mt3_address0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address0,
        fpga_uni_num_mt3_ce0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce0,
        fpga_uni_num_mt3_q0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_q0,
        fpga_uni_num_mt3_address1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address1,
        fpga_uni_num_mt3_ce1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce1,
        fpga_uni_num_mt3_we1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_we1,
        fpga_uni_num_mt3_d1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_d1,
        fpga_uni_num_mt2_address0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address0,
        fpga_uni_num_mt2_ce0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce0,
        fpga_uni_num_mt2_q0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_q0,
        fpga_uni_num_mt2_address1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address1,
        fpga_uni_num_mt2_ce1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce1,
        fpga_uni_num_mt2_we1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_we1,
        fpga_uni_num_mt2_d1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_d1,
        fpga_uni_num_mt1_address0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address0,
        fpga_uni_num_mt1_ce0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce0,
        fpga_uni_num_mt1_q0 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_q0,
        fpga_uni_num_mt1_address1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address1,
        fpga_uni_num_mt1_ce1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce1,
        fpga_uni_num_mt1_we1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_we1,
        fpga_uni_num_mt1_d1 => grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_d1,
        s => grp_rand_top_set_seed_fu_444_s,
        ap_return => grp_rand_top_set_seed_fu_444_ap_return);

    grp_rand_top_set_seed_fu_456 : component rand_top_set_seed
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rand_top_set_seed_fu_456_ap_start,
        ap_done => grp_rand_top_set_seed_fu_456_ap_done,
        ap_idle => grp_rand_top_set_seed_fu_456_ap_idle,
        ap_ready => grp_rand_top_set_seed_fu_456_ap_ready,
        fpga_uni_num_mt3_address0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address0,
        fpga_uni_num_mt3_ce0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce0,
        fpga_uni_num_mt3_q0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_q0,
        fpga_uni_num_mt3_address1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address1,
        fpga_uni_num_mt3_ce1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce1,
        fpga_uni_num_mt3_we1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_we1,
        fpga_uni_num_mt3_d1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_d1,
        fpga_uni_num_mt2_address0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address0,
        fpga_uni_num_mt2_ce0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce0,
        fpga_uni_num_mt2_q0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_q0,
        fpga_uni_num_mt2_address1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address1,
        fpga_uni_num_mt2_ce1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce1,
        fpga_uni_num_mt2_we1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_we1,
        fpga_uni_num_mt2_d1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_d1,
        fpga_uni_num_mt1_address0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address0,
        fpga_uni_num_mt1_ce0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce0,
        fpga_uni_num_mt1_q0 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_q0,
        fpga_uni_num_mt1_address1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address1,
        fpga_uni_num_mt1_ce1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce1,
        fpga_uni_num_mt1_we1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_we1,
        fpga_uni_num_mt1_d1 => grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_d1,
        s => grp_rand_top_set_seed_fu_456_s,
        ap_return => grp_rand_top_set_seed_fu_456_ap_return);

    temper_1_rand_top_tempering_fu_468 : component rand_top_tempering
    port map (
        x => temper_1_rand_top_tempering_fu_468_x,
        ap_return => temper_1_rand_top_tempering_fu_468_ap_return);

    temper_rand_top_tempering_fu_473 : component rand_top_tempering
    port map (
        x => temper_rand_top_tempering_fu_473_x,
        ap_return => temper_rand_top_tempering_fu_473_ap_return);

    reg1_3_rand_top_ex_gen_uni_num_fu_478 : component rand_top_ex_gen_uni_num
    port map (
        A_read => reg1_3_rand_top_ex_gen_uni_num_fu_478_A_read,
        B => reg1_3_rand_top_ex_gen_uni_num_fu_478_B,
        C => reg1_3_rand_top_ex_gen_uni_num_fu_478_C,
        ap_return => reg1_3_rand_top_ex_gen_uni_num_fu_478_ap_return);

    reg1_1_rand_top_ex_gen_uni_num_fu_485 : component rand_top_ex_gen_uni_num
    port map (
        A_read => reg1_1_rand_top_ex_gen_uni_num_fu_485_A_read,
        B => reg1_1_rand_top_ex_gen_uni_num_fu_485_B,
        C => reg1_1_rand_top_ex_gen_uni_num_fu_485_C,
        ap_return => reg1_1_rand_top_ex_gen_uni_num_fu_485_ap_return);

    rand_top_fmul_32ns_32ns_32_5_max_dsp_U23 : component rand_top_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_492_p0,
        din1 => grp_fu_492_p1,
        ce => grp_fu_492_ce,
        dout => grp_fu_492_p2);

    rand_top_fmul_32ns_32ns_32_5_max_dsp_U24 : component rand_top_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_497_p0,
        din1 => grp_fu_497_p1,
        ce => grp_fu_497_ce,
        dout => grp_fu_497_p2);

    rand_top_fmul_32ns_32ns_32_5_max_dsp_U25 : component rand_top_fmul_32ns_32ns_32_5_max_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_502_p0,
        din1 => grp_fu_502_p1,
        ce => grp_fu_502_ce,
        dout => grp_fu_502_p2);

    rand_top_fmul_32ns_32ns_32_6_no_dsp_U26 : component rand_top_fmul_32ns_32ns_32_6_no_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_507_p0,
        din1 => grp_fu_507_p1,
        ce => grp_fu_507_ce,
        dout => grp_fu_507_p2);

    rand_top_fmul_32ns_32ns_32_6_no_dsp_U27 : component rand_top_fmul_32ns_32ns_32_6_no_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_512_p0,
        din1 => grp_fu_512_p1,
        ce => grp_fu_512_ce,
        dout => grp_fu_512_p2);

    rand_top_fmul_32ns_32ns_32_6_no_dsp_U28 : component rand_top_fmul_32ns_32ns_32_6_no_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_516_p0,
        din1 => grp_fu_516_p1,
        ce => grp_fu_516_ce,
        dout => grp_fu_516_p2);

    rand_top_uitofp_32ns_32_6_U29 : component rand_top_uitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_520_p0,
        ce => grp_fu_520_ce,
        dout => grp_fu_520_p1);

    rand_top_uitofp_32ns_32_6_U30 : component rand_top_uitofp_32ns_32_6
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_523_p0,
        ce => grp_fu_523_ce,
        dout => grp_fu_523_p1);

    rand_top_fsqrt_32ns_32ns_32_16_U31 : component rand_top_fsqrt_32ns_32ns_32_16
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_526_p0,
        din1 => grp_fu_526_p1,
        ce => grp_fu_526_ce,
        dout => grp_fu_526_p2);

    rand_top_flog_32ns_32ns_32_13_no_dsp_U32 : component rand_top_flog_32ns_32ns_32_13_no_dsp
    generic map (
        ID => 1,
        NUM_STAGE => 13,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_531_p0,
        din1 => grp_fu_531_p1,
        ce => grp_fu_531_ce,
        dout => grp_fu_531_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_stream_out_ap_ack assign process. --
    ap_reg_ioackin_stream_out_ap_ack_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_stream_out_ap_ack <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it60)) then
                    if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                        ap_reg_ioackin_stream_out_ap_ack <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = stream_out_ap_ack)) then 
                        ap_reg_ioackin_stream_out_ap_ack <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it13 assign process. --
    ap_reg_ppiten_pp0_it13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_reg_ppiten_pp0_it12;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it13 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it14 assign process. --
    ap_reg_ppiten_pp0_it14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_reg_ppiten_pp0_it13;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it14 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it15 assign process. --
    ap_reg_ppiten_pp0_it15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_reg_ppiten_pp0_it14;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it15 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it16 assign process. --
    ap_reg_ppiten_pp0_it16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_reg_ppiten_pp0_it15;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it16 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it17 assign process. --
    ap_reg_ppiten_pp0_it17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_reg_ppiten_pp0_it16;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it17 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it18 assign process. --
    ap_reg_ppiten_pp0_it18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_reg_ppiten_pp0_it17;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it18 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it19 assign process. --
    ap_reg_ppiten_pp0_it19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_reg_ppiten_pp0_it18;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it19 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it20 assign process. --
    ap_reg_ppiten_pp0_it20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_reg_ppiten_pp0_it19;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it20 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it21 assign process. --
    ap_reg_ppiten_pp0_it21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_reg_ppiten_pp0_it20;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it22 assign process. --
    ap_reg_ppiten_pp0_it22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_reg_ppiten_pp0_it21;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it22 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it23 assign process. --
    ap_reg_ppiten_pp0_it23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_reg_ppiten_pp0_it22;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it23 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it24 assign process. --
    ap_reg_ppiten_pp0_it24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_reg_ppiten_pp0_it23;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it24 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it25 assign process. --
    ap_reg_ppiten_pp0_it25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_reg_ppiten_pp0_it24;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it25 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it26 assign process. --
    ap_reg_ppiten_pp0_it26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_reg_ppiten_pp0_it25;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it26 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it27 assign process. --
    ap_reg_ppiten_pp0_it27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_reg_ppiten_pp0_it26;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it27 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it28 assign process. --
    ap_reg_ppiten_pp0_it28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_reg_ppiten_pp0_it27;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it28 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it29 assign process. --
    ap_reg_ppiten_pp0_it29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_reg_ppiten_pp0_it28;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it29 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it30 assign process. --
    ap_reg_ppiten_pp0_it30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_reg_ppiten_pp0_it29;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it30 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it31 assign process. --
    ap_reg_ppiten_pp0_it31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_reg_ppiten_pp0_it30;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it31 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it32 assign process. --
    ap_reg_ppiten_pp0_it32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_reg_ppiten_pp0_it31;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it32 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it33 assign process. --
    ap_reg_ppiten_pp0_it33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_reg_ppiten_pp0_it32;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it33 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it34 assign process. --
    ap_reg_ppiten_pp0_it34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_reg_ppiten_pp0_it33;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it34 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it35 assign process. --
    ap_reg_ppiten_pp0_it35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_reg_ppiten_pp0_it34;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it35 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it36 assign process. --
    ap_reg_ppiten_pp0_it36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_reg_ppiten_pp0_it35;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it36 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it37 assign process. --
    ap_reg_ppiten_pp0_it37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it37 <= ap_reg_ppiten_pp0_it36;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it37 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it38 assign process. --
    ap_reg_ppiten_pp0_it38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_reg_ppiten_pp0_it37;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it38 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it39 assign process. --
    ap_reg_ppiten_pp0_it39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_reg_ppiten_pp0_it38;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it39 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it40 assign process. --
    ap_reg_ppiten_pp0_it40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_reg_ppiten_pp0_it39;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it40 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it41 assign process. --
    ap_reg_ppiten_pp0_it41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_reg_ppiten_pp0_it40;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it41 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it42 assign process. --
    ap_reg_ppiten_pp0_it42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it42 <= ap_reg_ppiten_pp0_it41;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it42 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it43 assign process. --
    ap_reg_ppiten_pp0_it43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_reg_ppiten_pp0_it42;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it43 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it44 assign process. --
    ap_reg_ppiten_pp0_it44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it44 <= ap_reg_ppiten_pp0_it43;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it44 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it45 assign process. --
    ap_reg_ppiten_pp0_it45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it45 <= ap_reg_ppiten_pp0_it44;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it45 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it46 assign process. --
    ap_reg_ppiten_pp0_it46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it46 <= ap_reg_ppiten_pp0_it45;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it46 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it47 assign process. --
    ap_reg_ppiten_pp0_it47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it47 <= ap_reg_ppiten_pp0_it46;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it47 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it48 assign process. --
    ap_reg_ppiten_pp0_it48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it48 <= ap_reg_ppiten_pp0_it47;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it48 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it49 assign process. --
    ap_reg_ppiten_pp0_it49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it49 <= ap_reg_ppiten_pp0_it48;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it49 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it50 assign process. --
    ap_reg_ppiten_pp0_it50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it50 <= ap_reg_ppiten_pp0_it49;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it50 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it51 assign process. --
    ap_reg_ppiten_pp0_it51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it51 <= ap_reg_ppiten_pp0_it50;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it51 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it52 assign process. --
    ap_reg_ppiten_pp0_it52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it52 <= ap_reg_ppiten_pp0_it51;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it52 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it53 assign process. --
    ap_reg_ppiten_pp0_it53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it53 <= ap_reg_ppiten_pp0_it52;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it53 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it54 assign process. --
    ap_reg_ppiten_pp0_it54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it54 <= ap_reg_ppiten_pp0_it53;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it54 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it55 assign process. --
    ap_reg_ppiten_pp0_it55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it55 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it55 <= ap_reg_ppiten_pp0_it54;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it55 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it56 assign process. --
    ap_reg_ppiten_pp0_it56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it56 <= ap_reg_ppiten_pp0_it55;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it56 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it57 assign process. --
    ap_reg_ppiten_pp0_it57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it57 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it57 <= ap_reg_ppiten_pp0_it56;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it57 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it58 assign process. --
    ap_reg_ppiten_pp0_it58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it58 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it58 <= ap_reg_ppiten_pp0_it57;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it58 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it59 assign process. --
    ap_reg_ppiten_pp0_it59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it59 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it59 <= ap_reg_ppiten_pp0_it58;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it59 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it60 assign process. --
    ap_reg_ppiten_pp0_it60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it60 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it60 <= ap_reg_ppiten_pp0_it59;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it60 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg assign process. --
    grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_rand_top_set_seed_fu_444_ap_ready)) then 
                    grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg assign process. --
    grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_rand_top_set_seed_fu_456_ap_ready)) then 
                    grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg assign process. --
    grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                    grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_rand_top_sinf_or_cosf_fu_414_ap_ready)) then 
                    grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg assign process. --
    grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it22) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                    grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_rand_top_sinf_or_cosf_fu_429_ap_ready)) then 
                    grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 assign process. --
    ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and not((ap_const_lv1_0 = tmp_17_fu_820_p2)))) then 
                ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and (ap_const_lv1_0 = tmp_18_fu_825_p2))) then 
                ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 <= a1_3_cast_fu_848_p1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and not((ap_const_lv1_0 = tmp_18_fu_825_p2)))) then 
                ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 <= a1_1_cast_fu_873_p1;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and not((ap_const_lv1_0 = tmp_16_fu_815_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_s_fu_810_p2))))) then 
                ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 <= a1_reg_1337;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4 <= ap_reg_phiprechg_a1_4_i1_reg_311pp0_it3;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 assign process. --
    ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_s_fu_810_p2)))) then 
                ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 <= ap_const_lv32_A9;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and (ap_const_lv1_0 = tmp_18_fu_825_p2))) then 
                ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 <= a2_2_fu_852_p3;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and not((ap_const_lv1_0 = tmp_18_fu_825_p2)))) then 
                ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 <= a2_cast_fu_882_p1;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and not((ap_const_lv1_0 = tmp_16_fu_815_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and not((ap_const_lv1_0 = tmp_17_fu_820_p2))))) then 
                ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4 <= ap_reg_phiprechg_a2_4_i1_reg_328pp0_it3;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 assign process. --
    ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and not((ap_const_lv1_0 = tmp_17_fu_820_p2)))) then 
                ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 <= ap_const_lv32_E2;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and (ap_const_lv1_0 = tmp_18_fu_825_p2))) then 
                ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 <= a3_1_fu_868_p2;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and not((ap_const_lv1_0 = tmp_18_fu_825_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_s_fu_810_p2))))) then 
                ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and not((ap_const_lv1_0 = tmp_16_fu_815_p2)))) then 
                ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 <= a3_cast_fu_891_p1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4 <= ap_reg_phiprechg_a3_4_i1_reg_348pp0_it3;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 assign process. --
    ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and (ap_const_lv1_0 = tmp_18_fu_825_p2))) then 
                ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 <= ap_const_lv2_3;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and not((ap_const_lv1_0 = tmp_18_fu_825_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and not((ap_const_lv1_0 = tmp_17_fu_820_p2))))) then 
                ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 <= ap_const_lv2_2;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and not((ap_const_lv1_0 = tmp_16_fu_815_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_s_fu_810_p2))))) then 
                ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 <= ap_const_lv2_1;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4 <= ap_reg_phiprechg_s2_4_i1_reg_368pp0_it3;
            end if; 
        end if;
    end process;

    -- ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 assign process. --
    ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_s_fu_810_p2)))) then 
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 <= ap_const_lv2_2;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and (ap_const_lv1_0 = tmp_18_fu_825_p2))) then 
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 <= s3_0_i1_fu_860_p3;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and (ap_const_lv1_0 = tmp_17_fu_820_p2) and not((ap_const_lv1_0 = tmp_18_fu_825_p2)))) then 
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 <= ap_const_lv2_1;
            elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and not((ap_const_lv1_0 = tmp_16_fu_815_p2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_s_fu_810_p2) and (ap_const_lv1_0 = tmp_16_fu_815_p2) and not((ap_const_lv1_0 = tmp_17_fu_820_p2))))) then 
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 <= ap_const_lv2_3;
            elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4 <= ap_reg_phiprechg_s3_4_i1_reg_391pp0_it3;
            end if; 
        end if;
    end process;

    -- uni_num_mti_0 assign process. --
    uni_num_mti_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                uni_num_mti_0 <= a1_fu_654_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                uni_num_mti_0 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- uni_num_mti_1 assign process. --
    uni_num_mti_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                uni_num_mti_1 <= a1_8_fu_585_p3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                uni_num_mti_1 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    -- uni_num_prev_val_0 assign process. --
    uni_num_prev_val_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                uni_num_prev_val_0 <= reg2_3_reg_1506;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                uni_num_prev_val_0 <= grp_rand_top_set_seed_fu_444_ap_return;
            end if; 
        end if;
    end process;

    -- uni_num_prev_val_1 assign process. --
    uni_num_prev_val_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
                uni_num_prev_val_1 <= reg2_4_reg_1495;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done))))) then 
                uni_num_prev_val_1 <= grp_rand_top_set_seed_fu_456_ap_return;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60)))) then
                a1_6_reg_1366 <= a1_6_fu_721_p3;
                a1_reg_1337 <= a1_fu_654_p3;
                ap_reg_ppstg_i1_1_reg_1265_pp0_it2 <= ap_reg_ppstg_i1_1_reg_1265_pp0_it1;
                ap_reg_ppstg_i1_1_reg_1265_pp0_it3 <= ap_reg_ppstg_i1_1_reg_1265_pp0_it2;
                ap_reg_ppstg_i1_1_reg_1265_pp0_it4 <= ap_reg_ppstg_i1_1_reg_1265_pp0_it3;
                ap_reg_ppstg_i1_1_reg_1265_pp0_it5 <= ap_reg_ppstg_i1_1_reg_1265_pp0_it4;
                ap_reg_ppstg_i1_reg_1324_pp0_it3 <= i1_reg_1324;
                ap_reg_ppstg_i1_reg_1324_pp0_it4 <= ap_reg_ppstg_i1_reg_1324_pp0_it3;
                ap_reg_ppstg_i1_reg_1324_pp0_it5 <= ap_reg_ppstg_i1_reg_1324_pp0_it4;
                ap_reg_ppstg_i1_reg_1324_pp0_it6 <= ap_reg_ppstg_i1_reg_1324_pp0_it5;
                ap_reg_ppstg_sel_tmp8_reg_1314_pp0_it2 <= sel_tmp8_reg_1314;
                ap_reg_ppstg_temper_reg_1553_pp0_it8 <= temper_reg_1553;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it10 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it9;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it11 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it10;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it12 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it11;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it13 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it12;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it14 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it13;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it15 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it14;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it16 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it15;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it17 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it16;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it18 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it17;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it19 <= ap_reg_ppstg_tmp_34_reg_1564_pp0_it18;
                ap_reg_ppstg_tmp_34_reg_1564_pp0_it9 <= tmp_34_reg_1564;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it10 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it9;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it11 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it10;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it12 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it11;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it13 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it12;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it14 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it13;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it15 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it14;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it16 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it15;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it17 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it16;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it18 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it17;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it19 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it18;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it20 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it19;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it21 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it20;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it22 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it21;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it8 <= tmp_57_reg_1559;
                ap_reg_ppstg_tmp_57_reg_1559_pp0_it9 <= ap_reg_ppstg_tmp_57_reg_1559_pp0_it8;
                ap_reg_ppstg_tmp_59_reg_1332_pp0_it3 <= tmp_59_reg_1332;
                ap_reg_ppstg_tmp_59_reg_1332_pp0_it4 <= ap_reg_ppstg_tmp_59_reg_1332_pp0_it3;
                ap_reg_ppstg_tmp_59_reg_1332_pp0_it5 <= ap_reg_ppstg_tmp_59_reg_1332_pp0_it4;
                ap_reg_ppstg_tmp_59_reg_1332_pp0_it6 <= ap_reg_ppstg_tmp_59_reg_1332_pp0_it5;
                ap_reg_ppstg_tmp_62_reg_1273_pp0_it2 <= ap_reg_ppstg_tmp_62_reg_1273_pp0_it1;
                ap_reg_ppstg_tmp_62_reg_1273_pp0_it3 <= ap_reg_ppstg_tmp_62_reg_1273_pp0_it2;
                ap_reg_ppstg_tmp_62_reg_1273_pp0_it4 <= ap_reg_ppstg_tmp_62_reg_1273_pp0_it3;
                ap_reg_ppstg_tmp_62_reg_1273_pp0_it5 <= ap_reg_ppstg_tmp_62_reg_1273_pp0_it4;
                cosfs_reg_1620 <= grp_rand_top_sinf_or_cosf_fu_429_ap_return;
                i1_reg_1324 <= uni_num_mti_0;
                logfs_reg_1599 <= grp_fu_531_p2;
                mults_reg_1604 <= grp_fu_507_p2;
                newSel3_reg_1392 <= newSel3_fu_789_p3;
                or_cond1_reg_1386 <= or_cond1_fu_758_p2;
                reg1_1_reg_1525 <= reg1_1_rand_top_ex_gen_uni_num_fu_485_ap_return;
                reg1_3_reg_1517 <= reg1_3_rand_top_ex_gen_uni_num_fu_478_ap_return;
                reg2_3_reg_1506 <= reg2_3_fu_1089_p3;
                reg2_4_reg_1495 <= reg2_4_fu_1035_p3;
                reg3_2_reg_1512 <= reg3_2_fu_1117_p3;
                reg3_7_reg_1501 <= reg3_7_fu_1061_p3;
                rho_reg_1609 <= grp_fu_526_p2;
                s2_4_i_reg_1453 <= s2_4_i_fu_953_p3;
                s3_4_i_reg_1459 <= s3_4_i_fu_981_p3;
                sel_tmp3_reg_1371 <= sel_tmp3_fu_733_p2;
                sinfs_reg_1615 <= grp_rand_top_sinf_or_cosf_fu_414_ap_return;
                temper_1_reg_1547 <= temper_1_rand_top_tempering_fu_468_ap_return;
                temper_reg_1553 <= temper_rand_top_tempering_fu_473_ap_return;
                tmp_27_reg_1533 <= tmp_27_fu_1140_p2;
                tmp_34_reg_1564 <= tmp_34_fu_1218_p2;
                tmp_41_reg_1361 <= tmp_41_fu_686_p2;
                tmp_42_reg_1378 <= tmp_42_fu_738_p2;
                tmp_57_reg_1559 <= tmp_57_fu_1213_p2;
                tmp_58_reg_1569 <= grp_fu_520_p1;
                tmp_59_reg_1332 <= tmp_59_fu_638_p1;
                tmp_60_reg_1350 <= tmp_60_fu_662_p1;
                tmp_61_reg_1356 <= tmp_61_fu_666_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then
                a1_8_reg_1278 <= a1_8_fu_585_p3;
                ap_reg_ppstg_a1_8_reg_1278_pp0_it1 <= a1_8_reg_1278;
                ap_reg_ppstg_i1_1_reg_1265_pp0_it1 <= i1_1_reg_1265;
                ap_reg_ppstg_tmp_62_reg_1273_pp0_it1 <= tmp_62_reg_1273;
                ap_reg_ppstg_tmp_63_reg_1290_pp0_it1 <= tmp_63_reg_1290;
                i1_1_reg_1265 <= uni_num_mti_1;
                sel_tmp8_reg_1314 <= sel_tmp8_fu_628_p2;
                tmp_37_reg_1297 <= tmp_37_fu_603_p2;
                tmp_38_reg_1303 <= tmp_38_fu_608_p2;
                tmp_39_reg_1309 <= tmp_39_fu_613_p2;
                tmp_62_reg_1273 <= tmp_62_fu_569_p1;
                tmp_63_reg_1290 <= tmp_63_fu_593_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then
                ap_reg_phiprechg_s2_4_i1_reg_368pp0_it5 <= ap_reg_phiprechg_s2_4_i1_reg_368pp0_it4;
                ap_reg_phiprechg_s3_4_i1_reg_391pp0_it5 <= ap_reg_phiprechg_s3_4_i1_reg_391pp0_it4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it18))) then
                p_op_i1_reg_1584 <= grp_fu_497_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it21))) then
                p_op_i_op_reg_1594 <= grp_fu_502_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it16))) then
                p_op_i_reg_1579 <= grp_fu_492_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (sel_tmp8_reg_1314 = ap_const_lv1_0))) then
                sel_tmp4_reg_1397 <= sel_tmp4_fu_805_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_27_fu_1140_p2))) then
                tmp_29_reg_1537 <= tmp_29_fu_1145_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it13))) then
                tmp_35_reg_1574 <= grp_fu_523_p1;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_rand_top_set_seed_fu_444_ap_done, grp_rand_top_set_seed_fu_456_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_rand_top_set_seed_fu_444_ap_done) or (ap_const_logic_0 = grp_rand_top_set_seed_fu_456_ap_done)))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a1_1_cast_fu_873_p1 <= std_logic_vector(resize(unsigned(grp_fu_536_p2),32));
    a1_2_fu_840_p3 <= 
        grp_fu_536_p2 when (tmp_19_fu_830_p2(0) = '1') else 
        ap_const_lv8_0;
    a1_3_cast_fu_848_p1 <= std_logic_vector(resize(unsigned(a1_2_fu_840_p3),32));
    a1_4_fu_696_p3 <= 
        a1_6_cast_fu_676_p2 when (tmp_41_fu_686_p2(0) = '1') else 
        ap_const_lv9_0;
        a1_4_i_cast_fu_908_p1 <= std_logic_vector(resize(signed(a1_7_fu_902_p3),32));

    a1_5_fu_714_p3 <= 
        ap_reg_ppstg_tmp_63_reg_1290_pp0_it1 when (sel_tmp1_fu_709_p2(0) = '1') else 
        a1_4_fu_696_p3;
    a1_6_cast_fu_676_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_63_reg_1290_pp0_it1) + unsigned(ap_const_lv9_11C));
    a1_6_fu_721_p3 <= 
        a1_6_cast_fu_676_p2 when (sel_tmp8_reg_1314(0) = '1') else 
        a1_5_fu_714_p3;
    a1_7_fu_902_p3 <= 
        ap_const_lv9_0 when (tmp_42_reg_1378(0) = '1') else 
        a1_6_reg_1366;
    a1_8_fu_585_p3 <= 
        ap_const_lv32_0 when (tmp_36_fu_573_p2(0) = '1') else 
        i2_2_fu_579_p2;
    a1_fu_654_p3 <= 
        ap_const_lv32_0 when (tmp_fu_642_p2(0) = '1') else 
        i2_fu_648_p2;
    a2_1_fu_835_p2 <= std_logic_vector(unsigned(a1_reg_1337) + unsigned(ap_const_lv32_FFFFFE39));
    a2_2_fu_852_p3 <= 
        ap_const_lv32_0 when (tmp_19_fu_830_p2(0) = '1') else 
        a2_1_fu_835_p2;
    a2_3_cast_fu_681_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_63_reg_1290_pp0_it1) + unsigned(ap_const_lv9_11D));
    a2_3_fu_691_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_a1_8_reg_1278_pp0_it1) + unsigned(ap_const_lv32_FFFFFE39));
    a2_cast_fu_882_p1 <= std_logic_vector(resize(unsigned(a2_fu_877_p2),32));
    a2_fu_877_p2 <= std_logic_vector(unsigned(tmp_60_reg_1350) + unsigned(ap_const_lv8_1D));
    a3_1_fu_868_p2 <= std_logic_vector(unsigned(a1_reg_1337) + unsigned(ap_const_lv32_FFFFFE73));
        a3_cast_fu_891_p1 <= std_logic_vector(resize(signed(a3_fu_886_p2),32));

    a3_fu_886_p2 <= std_logic_vector(unsigned(tmp_61_reg_1356) + unsigned(ap_const_lv9_1FF));
    ap_done <= ap_const_logic_0;

    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;
    ap_reg_phiprechg_a1_4_i1_reg_311pp0_it3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_a2_4_i1_reg_328pp0_it3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_a3_4_i1_reg_348pp0_it3 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_s2_4_i1_reg_368pp0_it3 <= "XX";
    ap_reg_phiprechg_s3_4_i1_reg_391pp0_it3 <= "XX";
    ap_return <= ap_const_lv32_0;

    -- ap_sig_bdd_127 assign process. --
    ap_sig_bdd_127_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_127 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_19 assign process. --
    ap_sig_bdd_19_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_19 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_777 assign process. --
    ap_sig_bdd_777_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_777 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_127)
    begin
        if (ap_sig_bdd_127) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_19)
    begin
        if (ap_sig_bdd_19) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_777)
    begin
        if (ap_sig_bdd_777) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_stream_out_ap_ack assign process. --
    ap_sig_ioackin_stream_out_ap_ack_assign_proc : process(stream_out_ap_ack, ap_reg_ioackin_stream_out_ap_ack)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_stream_out_ap_ack)) then 
            ap_sig_ioackin_stream_out_ap_ack <= stream_out_ap_ack;
        else 
            ap_sig_ioackin_stream_out_ap_ack <= ap_const_logic_1;
        end if; 
    end process;

    d0_toint_fu_1238_p1 <= grp_fu_512_p2;
    d1_toint_fu_1242_p1 <= grp_fu_516_p2;

    -- grp_fu_492_ce assign process. --
    grp_fu_492_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_reg_ppstg_tmp_57_reg_1559_pp0_it12, ap_reg_ppstg_tmp_57_reg_1559_pp0_it13, ap_reg_ppstg_tmp_57_reg_1559_pp0_it14, ap_reg_ppstg_tmp_57_reg_1559_pp0_it15, ap_reg_ppstg_tmp_57_reg_1559_pp0_it16)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it16) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it12) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it13) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it14) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it15)))) then 
            grp_fu_492_ce <= ap_const_logic_1;
        else 
            grp_fu_492_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_492_p0 <= tmp_58_reg_1569;
    grp_fu_492_p1 <= ap_const_lv32_2F800000;

    -- grp_fu_497_ce assign process. --
    grp_fu_497_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_reg_ppstg_tmp_34_reg_1564_pp0_it14, ap_reg_ppstg_tmp_34_reg_1564_pp0_it15, ap_reg_ppstg_tmp_34_reg_1564_pp0_it16, ap_reg_ppstg_tmp_34_reg_1564_pp0_it17, ap_reg_ppstg_tmp_34_reg_1564_pp0_it18)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it18) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it14) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it15) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it16) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it17)))) then 
            grp_fu_497_ce <= ap_const_logic_1;
        else 
            grp_fu_497_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_497_p0 <= tmp_35_reg_1574;
    grp_fu_497_p1 <= ap_const_lv32_2F800000;

    -- grp_fu_502_ce assign process. --
    grp_fu_502_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_reg_ppstg_tmp_57_reg_1559_pp0_it17, ap_reg_ppstg_tmp_57_reg_1559_pp0_it18, ap_reg_ppstg_tmp_57_reg_1559_pp0_it19, ap_reg_ppstg_tmp_57_reg_1559_pp0_it20, ap_reg_ppstg_tmp_57_reg_1559_pp0_it21)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it21) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it17) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it18) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it19) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_57_reg_1559_pp0_it20)))) then 
            grp_fu_502_ce <= ap_const_logic_1;
        else 
            grp_fu_502_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_502_p0 <= p_op_i_reg_1579;
    grp_fu_502_p1 <= ap_const_lv32_40C90FDB;

    -- grp_fu_507_ce assign process. --
    grp_fu_507_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_507_ce <= ap_const_logic_1;
        else 
            grp_fu_507_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_507_p0 <= logfs_reg_1599;
    grp_fu_507_p1 <= ap_const_lv32_C0000000;

    -- grp_fu_512_ce assign process. --
    grp_fu_512_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_512_ce <= ap_const_logic_1;
        else 
            grp_fu_512_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_512_p0 <= rho_reg_1609;
    grp_fu_512_p1 <= sinfs_reg_1615;

    -- grp_fu_516_ce assign process. --
    grp_fu_516_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_516_ce <= ap_const_logic_1;
        else 
            grp_fu_516_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_516_p0 <= rho_reg_1609;
    grp_fu_516_p1 <= cosfs_reg_1620;

    -- grp_fu_520_ce assign process. --
    grp_fu_520_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_520_ce <= ap_const_logic_1;
        else 
            grp_fu_520_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_520_p0 <= temper_1_reg_1547;

    -- grp_fu_523_ce assign process. --
    grp_fu_523_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, tmp_34_reg_1564, ap_reg_ppstg_tmp_34_reg_1564_pp0_it9, ap_reg_ppstg_tmp_34_reg_1564_pp0_it10, ap_reg_ppstg_tmp_34_reg_1564_pp0_it11, ap_reg_ppstg_tmp_34_reg_1564_pp0_it12, ap_reg_ppstg_tmp_34_reg_1564_pp0_it13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and ((ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it13) or (ap_const_lv1_0 = tmp_34_reg_1564) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it9) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it10) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it11) or (ap_const_lv1_0 = ap_reg_ppstg_tmp_34_reg_1564_pp0_it12)))) then 
            grp_fu_523_ce <= ap_const_logic_1;
        else 
            grp_fu_523_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_523_p0 <= ap_reg_ppstg_temper_reg_1553_pp0_it8;

    -- grp_fu_526_ce assign process. --
    grp_fu_526_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_526_ce <= ap_const_logic_1;
        else 
            grp_fu_526_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_526_p0 <= ap_const_lv32_0;
    grp_fu_526_p1 <= mults_reg_1604;

    -- grp_fu_531_ce assign process. --
    grp_fu_531_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_fu_531_ce <= ap_const_logic_1;
        else 
            grp_fu_531_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_531_p0 <= ap_const_lv32_0;
    grp_fu_531_p1 <= 
        ap_const_lv32_2F800000 when (ap_reg_ppstg_tmp_34_reg_1564_pp0_it19(0) = '1') else 
        p_op_i1_reg_1584;
    grp_fu_536_p2 <= std_logic_vector(unsigned(tmp_60_reg_1350) + unsigned(ap_const_lv8_1C));
    grp_rand_top_set_seed_fu_444_ap_start <= grp_rand_top_set_seed_fu_444_ap_start_ap_start_reg;
    grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_q0 <= uni_num_mt1_0_q0;
    grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_q0 <= uni_num_mt2_0_q0;
    grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_q0 <= uni_num_mt3_0_q0;
    grp_rand_top_set_seed_fu_444_s <= s0;
    grp_rand_top_set_seed_fu_456_ap_start <= grp_rand_top_set_seed_fu_456_ap_start_ap_start_reg;
    grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_q0 <= uni_num_mt1_1_q0;
    grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_q0 <= uni_num_mt2_1_q0;
    grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_q0 <= uni_num_mt3_1_q0;
    grp_rand_top_set_seed_fu_456_s <= s1;

    -- grp_rand_top_sinf_or_cosf_fu_414_ap_ce assign process. --
    grp_rand_top_sinf_or_cosf_fu_414_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_rand_top_sinf_or_cosf_fu_414_ap_ce <= ap_const_logic_1;
        else 
            grp_rand_top_sinf_or_cosf_fu_414_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_rand_top_sinf_or_cosf_fu_414_ap_start <= grp_rand_top_sinf_or_cosf_fu_414_ap_start_ap_start_reg;
    grp_rand_top_sinf_or_cosf_fu_414_do_cos <= ap_const_logic_0;
    grp_rand_top_sinf_or_cosf_fu_414_t_in <= mults1_fu_1230_p3;

    -- grp_rand_top_sinf_or_cosf_fu_429_ap_ce assign process. --
    grp_rand_top_sinf_or_cosf_fu_429_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            grp_rand_top_sinf_or_cosf_fu_429_ap_ce <= ap_const_logic_1;
        else 
            grp_rand_top_sinf_or_cosf_fu_429_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_rand_top_sinf_or_cosf_fu_429_ap_start <= grp_rand_top_sinf_or_cosf_fu_429_ap_start_ap_start_reg;
    grp_rand_top_sinf_or_cosf_fu_429_do_cos <= ap_const_logic_1;
    grp_rand_top_sinf_or_cosf_fu_429_t_in <= mults1_fu_1230_p3;
    i2_2_fu_579_p2 <= std_logic_vector(unsigned(uni_num_mti_1) + unsigned(ap_const_lv32_1));
    i2_fu_648_p2 <= std_logic_vector(unsigned(uni_num_mti_0) + unsigned(ap_const_lv32_1));
    mults1_fu_1230_p3 <= 
        ap_const_lv32_30C90FDB when (ap_reg_ppstg_tmp_57_reg_1559_pp0_it22(0) = '1') else 
        p_op_i_op_reg_1594;
    newSel1_fu_763_p3 <= 
        ap_const_lv32_0 when (tmp_41_fu_686_p2(0) = '1') else 
        a2_3_fu_691_p2;
    newSel2_fu_771_p3 <= 
        newSel_cast_cast_fu_743_p3 when (tmp_42_fu_738_p2(0) = '1') else 
        newSel_fu_751_p3;
    newSel3_fu_789_p3 <= 
        newSel86_cast_fu_779_p1 when (or_cond2_fu_783_p2(0) = '1') else 
        newSel1_fu_763_p3;
    newSel4_fu_919_p3 <= 
        ap_const_lv32_0 when (ap_reg_ppstg_sel_tmp8_reg_1314_pp0_it2(0) = '1') else 
        sel_tmp4_reg_1397;
    newSel5_fu_925_p3 <= 
        newSel90_cast_cast_fu_912_p3 when (tmp_42_reg_1378(0) = '1') else 
        newSel4_fu_919_p3;
        newSel86_cast_fu_779_p1 <= std_logic_vector(resize(signed(newSel2_fu_771_p3),32));

    newSel90_cast_cast_fu_912_p3 <= 
        ap_const_lv32_E2 when (sel_tmp3_reg_1371(0) = '1') else 
        ap_const_lv32_0;
    newSel_cast_cast_fu_743_p3 <= 
        ap_const_lv9_0 when (sel_tmp3_fu_733_p2(0) = '1') else 
        ap_const_lv9_A9;
    newSel_fu_751_p3 <= 
        a2_3_cast_fu_681_p2 when (sel_tmp8_reg_1314(0) = '1') else 
        ap_const_lv9_0;
    or_cond1_fu_758_p2 <= (sel_tmp8_reg_1314 or sel_tmp1_fu_709_p2);
    or_cond2_fu_783_p2 <= (tmp_42_fu_738_p2 or or_cond1_fu_758_p2);
    reg1_1_rand_top_ex_gen_uni_num_fu_485_A_read <= uni_num_prev_val_0;
    reg1_1_rand_top_ex_gen_uni_num_fu_485_B <= reg2_3_reg_1506;
    reg1_1_rand_top_ex_gen_uni_num_fu_485_C <= reg3_2_reg_1512;
    reg1_3_rand_top_ex_gen_uni_num_fu_478_A_read <= uni_num_prev_val_1;
    reg1_3_rand_top_ex_gen_uni_num_fu_478_B <= reg2_4_reg_1495;
    reg1_3_rand_top_ex_gen_uni_num_fu_478_C <= reg3_7_reg_1501;
    reg2_1_fu_1081_p3 <= 
        uni_num_mt2_0_q0 when (tmp_24_fu_1075_p2(0) = '1') else 
        uni_num_mt3_0_q0;
    reg2_2_fu_1027_p3 <= 
        uni_num_mt2_1_q0 when (tmp_47_fu_1022_p2(0) = '1') else 
        uni_num_mt3_1_q0;
    reg2_3_fu_1089_p3 <= 
        uni_num_mt1_0_q0 when (tmp_23_fu_1069_p2(0) = '1') else 
        reg2_1_fu_1081_p3;
    reg2_4_fu_1035_p3 <= 
        uni_num_mt1_1_q0 when (tmp_46_fu_1017_p2(0) = '1') else 
        reg2_2_fu_1027_p3;
    reg3_1_fu_1109_p3 <= 
        uni_num_mt2_0_q0 when (tmp_26_fu_1103_p2(0) = '1') else 
        uni_num_mt3_0_q0;
    reg3_2_fu_1117_p3 <= 
        uni_num_mt1_0_q0 when (tmp_25_fu_1097_p2(0) = '1') else 
        reg3_1_fu_1109_p3;
    reg3_5_fu_1053_p3 <= 
        uni_num_mt2_1_q0 when (tmp_49_fu_1048_p2(0) = '1') else 
        uni_num_mt3_1_q0;
    reg3_7_fu_1061_p3 <= 
        uni_num_mt1_1_q0 when (tmp_48_fu_1043_p2(0) = '1') else 
        reg3_5_fu_1053_p3;
    s2_4_i_fu_953_p3 <= 
        sel_tmp9_fu_946_p3 when (tmp_42_reg_1378(0) = '1') else 
        sel_tmp6_fu_939_p3;
    s3_0_i1_fu_860_p3 <= 
        ap_const_lv2_1 when (tmp_19_fu_830_p2(0) = '1') else 
        ap_const_lv2_2;
    s3_0_i_fu_895_p3 <= 
        ap_const_lv2_1 when (tmp_41_reg_1361(0) = '1') else 
        ap_const_lv2_2;
    s3_4_i_fu_981_p3 <= 
        sel_tmp12_fu_974_p3 when (tmp_42_reg_1378(0) = '1') else 
        sel_tmp11_fu_967_p3;
    sel_tmp10_fu_960_p3 <= 
        ap_const_lv2_1 when (ap_reg_ppstg_sel_tmp8_reg_1314_pp0_it2(0) = '1') else 
        ap_const_lv2_3;
    sel_tmp11_fu_967_p3 <= 
        sel_tmp10_fu_960_p3 when (or_cond1_reg_1386(0) = '1') else 
        s3_0_i_fu_895_p3;
    sel_tmp12_fu_974_p3 <= 
        ap_const_lv2_3 when (sel_tmp3_reg_1371(0) = '1') else 
        ap_const_lv2_2;
    sel_tmp1_fu_709_p2 <= (tmp_38_reg_1303 and sel_tmp_fu_704_p2);
    sel_tmp2_fu_728_p2 <= (tmp_38_reg_1303 xor ap_const_lv1_1);
    sel_tmp34_v_cast_cast_fu_797_p3 <= 
        ap_const_lv32_FFFFFFFF when (sel_tmp1_fu_709_p2(0) = '1') else 
        ap_const_lv32_FFFFFE73;
    sel_tmp3_fu_733_p2 <= (tmp_39_reg_1309 and sel_tmp2_fu_728_p2);
    sel_tmp4_fu_805_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_a1_8_reg_1278_pp0_it1) + unsigned(sel_tmp34_v_cast_cast_fu_797_p3));
    sel_tmp5_fu_932_p3 <= 
        ap_const_lv2_2 when (ap_reg_ppstg_sel_tmp8_reg_1314_pp0_it2(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp6_fu_939_p3 <= 
        sel_tmp5_fu_932_p3 when (or_cond1_reg_1386(0) = '1') else 
        ap_const_lv2_3;
    sel_tmp7_fu_623_p2 <= "1" when (unsigned(a1_8_reg_1278) > unsigned(ap_const_lv32_E3)) else "0";
    sel_tmp8_fu_628_p2 <= (sel_tmp7_fu_623_p2 and tmp_40_fu_618_p2);
    sel_tmp9_fu_946_p3 <= 
        ap_const_lv2_2 when (sel_tmp3_reg_1371(0) = '1') else 
        ap_const_lv2_1;
    sel_tmp_fu_704_p2 <= (tmp_37_reg_1297 xor ap_const_lv1_1);
    stream_out <= (d1_toint_fu_1242_p1 & d0_toint_fu_1238_p1);
    temper_1_rand_top_tempering_fu_468_x <= reg1_3_reg_1517;
    temper_rand_top_tempering_fu_473_x <= reg1_1_reg_1525;
    tmp_16_fu_815_p2 <= "1" when (unsigned(a1_reg_1337) < unsigned(ap_const_lv32_E3)) else "0";
    tmp_17_fu_820_p2 <= "1" when (a1_reg_1337 = ap_const_lv32_E3) else "0";
    tmp_18_fu_825_p2 <= "1" when (unsigned(a1_reg_1337) < unsigned(ap_const_lv32_18D)) else "0";
    tmp_19_fu_830_p2 <= "1" when (unsigned(a1_reg_1337) < unsigned(ap_const_lv32_1C7)) else "0";
    tmp_20_fu_1002_p1 <= std_logic_vector(resize(unsigned(ap_reg_phiprechg_a1_4_i1_reg_311pp0_it4),64));
    tmp_21_fu_1007_p1 <= std_logic_vector(resize(unsigned(ap_reg_phiprechg_a2_4_i1_reg_328pp0_it4),64));
    tmp_22_fu_1012_p1 <= std_logic_vector(resize(unsigned(ap_reg_phiprechg_a3_4_i1_reg_348pp0_it4),64));
    tmp_23_fu_1069_p2 <= "1" when (ap_reg_phiprechg_s2_4_i1_reg_368pp0_it5 = ap_const_lv2_1) else "0";
    tmp_24_fu_1075_p2 <= "1" when (ap_reg_phiprechg_s2_4_i1_reg_368pp0_it5 = ap_const_lv2_2) else "0";
    tmp_25_fu_1097_p2 <= "1" when (ap_reg_phiprechg_s3_4_i1_reg_391pp0_it5 = ap_const_lv2_1) else "0";
    tmp_26_fu_1103_p2 <= "1" when (ap_reg_phiprechg_s3_4_i1_reg_391pp0_it5 = ap_const_lv2_2) else "0";
    tmp_27_fu_1140_p2 <= "1" when (unsigned(ap_reg_ppstg_i1_reg_1324_pp0_it5) < unsigned(ap_const_lv32_E3)) else "0";
    tmp_28_fu_1209_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_i1_reg_1324_pp0_it6),64));
    tmp_29_fu_1145_p2 <= "1" when (unsigned(ap_reg_ppstg_i1_reg_1324_pp0_it5) < unsigned(ap_const_lv32_18D)) else "0";
    tmp_30_fu_1199_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_59_reg_1332_pp0_it6) + unsigned(ap_const_lv8_1D));
    tmp_31_fu_1204_p1 <= std_logic_vector(resize(unsigned(tmp_30_fu_1199_p2),64));
    tmp_32_fu_1189_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_i1_reg_1324_pp0_it6) + unsigned(ap_const_lv32_FFFFFE73));
    tmp_33_fu_1194_p1 <= std_logic_vector(resize(unsigned(tmp_32_fu_1189_p2),64));
    tmp_34_fu_1218_p2 <= "1" when (temper_reg_1553 = ap_const_lv32_0) else "0";
    tmp_36_fu_573_p2 <= "1" when (uni_num_mti_1 = ap_const_lv32_26F) else "0";
    tmp_37_fu_603_p2 <= "1" when (a1_8_reg_1278 = ap_const_lv32_0) else "0";
    tmp_38_fu_608_p2 <= "1" when (unsigned(a1_8_reg_1278) < unsigned(ap_const_lv32_E3)) else "0";
    tmp_39_fu_613_p2 <= "1" when (a1_8_reg_1278 = ap_const_lv32_E3) else "0";
    tmp_40_fu_618_p2 <= "1" when (unsigned(a1_8_reg_1278) < unsigned(ap_const_lv32_18D)) else "0";
    tmp_41_fu_686_p2 <= "1" when (unsigned(ap_reg_ppstg_a1_8_reg_1278_pp0_it1) < unsigned(ap_const_lv32_1C7)) else "0";
    tmp_42_fu_738_p2 <= (sel_tmp3_fu_733_p2 or tmp_37_reg_1297);
    tmp_43_fu_988_p1 <= std_logic_vector(resize(unsigned(a1_4_i_cast_fu_908_p1),64));
    tmp_44_fu_993_p1 <= std_logic_vector(resize(unsigned(newSel3_reg_1392),64));
    tmp_45_fu_997_p1 <= std_logic_vector(resize(unsigned(newSel5_fu_925_p3),64));
    tmp_46_fu_1017_p2 <= "1" when (s2_4_i_reg_1453 = ap_const_lv2_1) else "0";
    tmp_47_fu_1022_p2 <= "1" when (s2_4_i_reg_1453 = ap_const_lv2_2) else "0";
    tmp_48_fu_1043_p2 <= "1" when (s3_4_i_reg_1459 = ap_const_lv2_1) else "0";
    tmp_49_fu_1048_p2 <= "1" when (s3_4_i_reg_1459 = ap_const_lv2_2) else "0";
    tmp_50_fu_1155_p2 <= "1" when (unsigned(ap_reg_ppstg_i1_1_reg_1265_pp0_it5) < unsigned(ap_const_lv32_E3)) else "0";
    tmp_51_fu_1185_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_i1_1_reg_1265_pp0_it5),64));
    tmp_52_fu_1160_p2 <= "1" when (unsigned(ap_reg_ppstg_i1_1_reg_1265_pp0_it5) < unsigned(ap_const_lv32_18D)) else "0";
    tmp_53_fu_1175_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_tmp_62_reg_1273_pp0_it5) + unsigned(ap_const_lv8_1D));
    tmp_54_fu_1180_p1 <= std_logic_vector(resize(unsigned(tmp_53_fu_1175_p2),64));
    tmp_55_fu_1165_p2 <= std_logic_vector(unsigned(ap_reg_ppstg_i1_1_reg_1265_pp0_it5) + unsigned(ap_const_lv32_FFFFFE73));
    tmp_56_fu_1170_p1 <= std_logic_vector(resize(unsigned(tmp_55_fu_1165_p2),64));
    tmp_57_fu_1213_p2 <= "1" when (temper_1_reg_1547 = ap_const_lv32_0) else "0";
    tmp_59_fu_638_p1 <= uni_num_mti_0(8 - 1 downto 0);
    tmp_60_fu_662_p1 <= a1_fu_654_p3(8 - 1 downto 0);
    tmp_61_fu_666_p1 <= a1_fu_654_p3(9 - 1 downto 0);
    tmp_62_fu_569_p1 <= uni_num_mti_1(8 - 1 downto 0);
    tmp_63_fu_593_p1 <= a1_8_fu_585_p3(9 - 1 downto 0);
    tmp_fu_642_p2 <= "1" when (uni_num_mti_0 = ap_const_lv32_26F) else "0";
    tmp_s_fu_810_p2 <= "1" when (a1_reg_1337 = ap_const_lv32_0) else "0";

    -- uni_num_mt1_0_address0 assign process. --
    uni_num_mt1_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address0, tmp_20_fu_1002_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then 
            uni_num_mt1_0_address0 <= tmp_20_fu_1002_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_address0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address0;
        else 
            uni_num_mt1_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_0_address1 assign process. --
    uni_num_mt1_0_address1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address1, tmp_28_fu_1209_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt1_0_address1 <= tmp_28_fu_1209_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_address1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_address1;
        else 
            uni_num_mt1_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_0_ce0 assign process. --
    uni_num_mt1_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_ce0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce0;
        else 
            uni_num_mt1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt1_0_ce1 assign process. --
    uni_num_mt1_0_ce1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt1_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_ce1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_ce1;
        else 
            uni_num_mt1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt1_0_d1 assign process. --
    uni_num_mt1_0_d1_assign_proc : process(ap_reg_ppiten_pp0_it7, reg1_1_reg_1525, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt1_0_d1 <= reg1_1_reg_1525;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_d1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_d1;
        else 
            uni_num_mt1_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_0_we1 assign process. --
    uni_num_mt1_0_we1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, tmp_27_reg_1533, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_we1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_27_reg_1533))))) then 
            uni_num_mt1_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_0_we1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt1_we1;
        else 
            uni_num_mt1_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt1_1_address0 assign process. --
    uni_num_mt1_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address0, tmp_43_fu_988_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
            uni_num_mt1_1_address0 <= tmp_43_fu_988_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_address0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address0;
        else 
            uni_num_mt1_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_1_address1 assign process. --
    uni_num_mt1_1_address1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address1, tmp_51_fu_1185_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt1_1_address1 <= tmp_51_fu_1185_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_address1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_address1;
        else 
            uni_num_mt1_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_1_ce0 assign process. --
    uni_num_mt1_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt1_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_ce0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce0;
        else 
            uni_num_mt1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt1_1_ce1 assign process. --
    uni_num_mt1_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt1_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_ce1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_ce1;
        else 
            uni_num_mt1_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt1_1_d1 assign process. --
    uni_num_mt1_1_d1_assign_proc : process(ap_reg_ppiten_pp0_it6, reg1_3_reg_1517, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt1_1_d1 <= reg1_3_reg_1517;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_d1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_d1;
        else 
            uni_num_mt1_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt1_1_we1 assign process. --
    uni_num_mt1_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_we1, tmp_50_fu_1155_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and not((ap_const_lv1_0 = tmp_50_fu_1155_p2))))) then 
            uni_num_mt1_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt1_1_we1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt1_we1;
        else 
            uni_num_mt1_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_0_address0 assign process. --
    uni_num_mt2_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address0, tmp_21_fu_1007_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then 
            uni_num_mt2_0_address0 <= tmp_21_fu_1007_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_address0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address0;
        else 
            uni_num_mt2_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_0_address1 assign process. --
    uni_num_mt2_0_address1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address1, tmp_31_fu_1204_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt2_0_address1 <= tmp_31_fu_1204_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_address1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_address1;
        else 
            uni_num_mt2_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_0_ce0 assign process. --
    uni_num_mt2_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_ce0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce0;
        else 
            uni_num_mt2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_0_ce1 assign process. --
    uni_num_mt2_0_ce1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt2_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_ce1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_ce1;
        else 
            uni_num_mt2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_0_d1 assign process. --
    uni_num_mt2_0_d1_assign_proc : process(ap_reg_ppiten_pp0_it7, reg1_1_reg_1525, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt2_0_d1 <= reg1_1_reg_1525;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_d1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_d1;
        else 
            uni_num_mt2_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_0_we1 assign process. --
    uni_num_mt2_0_we1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, tmp_27_reg_1533, tmp_29_reg_1537, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_we1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_27_reg_1533) and not((ap_const_lv1_0 = tmp_29_reg_1537))))) then 
            uni_num_mt2_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_0_we1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt2_we1;
        else 
            uni_num_mt2_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_1_address0 assign process. --
    uni_num_mt2_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address0, tmp_44_fu_993_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
            uni_num_mt2_1_address0 <= tmp_44_fu_993_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_address0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address0;
        else 
            uni_num_mt2_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_1_address1 assign process. --
    uni_num_mt2_1_address1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address1, tmp_54_fu_1180_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt2_1_address1 <= tmp_54_fu_1180_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_address1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_address1;
        else 
            uni_num_mt2_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_1_ce0 assign process. --
    uni_num_mt2_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt2_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_ce0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce0;
        else 
            uni_num_mt2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_1_ce1 assign process. --
    uni_num_mt2_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt2_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_ce1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_ce1;
        else 
            uni_num_mt2_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt2_1_d1 assign process. --
    uni_num_mt2_1_d1_assign_proc : process(ap_reg_ppiten_pp0_it6, reg1_3_reg_1517, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt2_1_d1 <= reg1_3_reg_1517;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_d1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_d1;
        else 
            uni_num_mt2_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt2_1_we1 assign process. --
    uni_num_mt2_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_we1, tmp_50_fu_1155_p2, tmp_52_fu_1160_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_50_fu_1155_p2) and not((ap_const_lv1_0 = tmp_52_fu_1160_p2))))) then 
            uni_num_mt2_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt2_1_we1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt2_we1;
        else 
            uni_num_mt2_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_0_address0 assign process. --
    uni_num_mt3_0_address0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address0, tmp_22_fu_1012_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) then 
            uni_num_mt3_0_address0 <= tmp_22_fu_1012_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_address0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address0;
        else 
            uni_num_mt3_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_0_address1 assign process. --
    uni_num_mt3_0_address1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address1, tmp_33_fu_1194_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt3_0_address1 <= tmp_33_fu_1194_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_address1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_address1;
        else 
            uni_num_mt3_0_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_0_ce0 assign process. --
    uni_num_mt3_0_ce0_assign_proc : process(ap_reg_ppiten_pp0_it4, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt3_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_ce0 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce0;
        else 
            uni_num_mt3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_0_ce1 assign process. --
    uni_num_mt3_0_ce1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt3_0_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_ce1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_ce1;
        else 
            uni_num_mt3_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_0_d1 assign process. --
    uni_num_mt3_0_d1_assign_proc : process(ap_reg_ppiten_pp0_it7, reg1_1_reg_1525, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it7)) then 
            uni_num_mt3_0_d1 <= reg1_1_reg_1525;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_d1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_d1;
        else 
            uni_num_mt3_0_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_0_we1 assign process. --
    uni_num_mt3_0_we1_assign_proc : process(ap_reg_ppiten_pp0_it7, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, tmp_27_reg_1533, tmp_29_reg_1537, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_we1)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it7) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_27_reg_1533) and (ap_const_lv1_0 = tmp_29_reg_1537)))) then 
            uni_num_mt3_0_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_0_we1 <= grp_rand_top_set_seed_fu_444_fpga_uni_num_mt3_we1;
        else 
            uni_num_mt3_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_1_address0 assign process. --
    uni_num_mt3_1_address0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address0, tmp_45_fu_997_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
            uni_num_mt3_1_address0 <= tmp_45_fu_997_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_address0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address0;
        else 
            uni_num_mt3_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_1_address1 assign process. --
    uni_num_mt3_1_address1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address1, tmp_56_fu_1170_p1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt3_1_address1 <= tmp_56_fu_1170_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_address1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_address1;
        else 
            uni_num_mt3_1_address1 <= "XXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_1_ce0 assign process. --
    uni_num_mt3_1_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce0)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt3_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_ce0 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce0;
        else 
            uni_num_mt3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_1_ce1 assign process. --
    uni_num_mt3_1_ce1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce1)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))))) then 
            uni_num_mt3_1_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_ce1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_ce1;
        else 
            uni_num_mt3_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- uni_num_mt3_1_d1 assign process. --
    uni_num_mt3_1_d1_assign_proc : process(ap_reg_ppiten_pp0_it6, reg1_3_reg_1517, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_d1)
    begin
        if ((ap_const_logic_1 = ap_reg_ppiten_pp0_it6)) then 
            uni_num_mt3_1_d1 <= reg1_3_reg_1517;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_d1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_d1;
        else 
            uni_num_mt3_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- uni_num_mt3_1_we1 assign process. --
    uni_num_mt3_1_we1_assign_proc : process(ap_reg_ppiten_pp0_it6, ap_sig_ioackin_stream_out_ap_ack, ap_reg_ppiten_pp0_it60, ap_sig_cseq_ST_st2_fsm_1, grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_we1, tmp_50_fu_1155_p2, tmp_52_fu_1160_p2)
    begin
        if ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_const_logic_0 = ap_sig_ioackin_stream_out_ap_ack) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it60))) and (ap_const_lv1_0 = tmp_50_fu_1155_p2) and (ap_const_lv1_0 = tmp_52_fu_1160_p2)))) then 
            uni_num_mt3_1_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            uni_num_mt3_1_we1 <= grp_rand_top_set_seed_fu_456_fpga_uni_num_mt3_we1;
        else 
            uni_num_mt3_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
